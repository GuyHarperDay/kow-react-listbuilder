{"version":3,"sources":["components/common/Button.js","components/unit/UnitHeader.js","components/unit/UnitTableRow.js","components/unit/UnitTable.js","components/unit/UnitFooter.js","components/unit/MultiUnit.js","components/common/Banner.js","components/UnlocksBanner.js","components/views/FactionUnitsIndex.js","components/unit/Unit.js","components/views/UnitSelect.js","components/views/ArmyList.js","helpers/unlocks.js","helpers/points.js","components/views/ArmiesIndex.js","App.js","serviceWorker.js","index.js"],"names":["Button","text","onClick","disabled","UnitHeader","unit","displayEditButton","handleClickEdit","unitDetails","className","name","type","UnitTableRow","displayAddButton","handleClickAdd","size","modelCount","speed","melee","ranged","defence","height","unitStrength","attacks","nerve","cost","UnitTable","units","map","key","UnitFooter","specialRules","keywords","spellcaster","MultiUnitRow","unlocks","Banner","UnlocksBanner","armyName","unallocated","tooManyHWMT","hwmt","tooManyTroopsOrIrregular","troopOrIrregular","FactionUnitsIndex","army","goToDisplay","selectUnit","selectArmy","fromArmyList","displaySelectOtherArmy","mergedFactionList","forEach","mergedUnitIndex","findIndex","unitArr","push","index","MultiUnit","u","Unit","UnitSelect","handleAddUnitToListWithArmyAndUnit","editingUnit","handleEditUnit","handleDeleteUnit","deleteConfirm","ArmyList","armyList","setFromArmyList","points","faction","unitId","handleEditUnitClick","unlockAmounts","Infantry","Regiment","heroMonsterTitanOrWarEngineUnique","Horde","monsterOrTitan","hero","warEngine","Legion","Chariot","Cavalry","calculateUnallocated","unitsArr","unitDetailsArr","troopsAndIrregularUnits","filter","irregular","heroes","warEngines","monsters","titans","unitsWithSlots","troopIrreg","hasBeenAllocated","nonHero","monster","nonWarEngine","nonMonster","titan","nonTitan","calculatePointsTotal","reduce","total","unitCost","ArmiesIndex","useState","armies","setArmies","isLoaded","setIsLoaded","display","setDisplay","selectedArmy","setSelectedArmy","selectedUnit","setSelectedUnit","setUnallocated","setPoints","useReducer","armyListState","action","armyListIndex","selectedUpgrades","addUnitToListDispatchFunction","id","editUnitDispatchFunction","console","log","deleteUnitDispatchFunction","Error","dispatch","useEffect","armiesData","unallocatedObj","processUnlocks","pointsObj","processPoints","i","find","length","uuidv4","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85010811.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ text, onClick, disabled }) => {\n  return (\n    <button onClick={onClick} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from 'components/common/Button.js';\n\nconst UnitHeader = ({ unit, displayEditButton = false, handleClickEdit = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  return (\n    <div className=\"unit-header\">\n      <p>{unitDetails.name}</p>\n      {displayEditButton && <Button text=\"Edit\" onClick={() => handleClickEdit(unit)} />}\n      <p>{unitDetails.type}</p>\n    </div>\n  );\n};\n\nexport default UnitHeader;\n","import React from 'react';\nimport Button from '../common/Button';\n\nconst UnitTableRow = ({ unit, displayAddButton = false, handleClickAdd = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  return (\n    <tr className=\"unit-table-row\">\n      <td>{`${unitDetails.size} (${unitDetails.modelCount})`}</td>\n      <td>{unitDetails.speed}</td>\n      <td>{unitDetails.melee}</td>\n      <td>{unitDetails.ranged}</td>\n      <td>{unitDetails.defence}</td>\n      <td>{unitDetails.height}</td>\n      <td>{unitDetails.unitStrength}</td>\n      <td>{unitDetails.attacks}</td>\n      <td>{unitDetails.nerve}</td>\n      <td>{unitDetails.cost}</td>\n      {displayAddButton && (\n        <td>\n          <Button text=\"Add\" onClick={() => handleClickAdd(unit)} />\n        </td>\n      )}\n    </tr>\n  );\n};\n\nexport default UnitTableRow;\n","import React from 'react';\nimport UnitTableRow from './UnitTableRow';\n\nconst UnitTable = ({ units, displayAddButton = false, handleClickAdd = false }) => {\n  return (\n    <table className=\"unit-table\">\n      <tbody>\n        <tr>\n          <th>Unit size</th>\n          <th>Sp</th>\n          <th>Me</th>\n          <th>Ra</th>\n          <th>De</th>\n          <th>H</th>\n          <th>US</th>\n          <th>Att</th>\n          <th>Ne</th>\n          <th>Pts</th>\n        </tr>\n        {units.map((unit) => (\n          <UnitTableRow\n            key={unit.unitDetails ? `${unit.unitDetails.name}-${unit.unitDetails.size}` : `${unit.name}-${unit.size}`}\n            unit={unit}\n            displayAddButton={displayAddButton}\n            handleClickAdd={handleClickAdd}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UnitTable;\n","import React from 'react';\n\nconst UnitFooter = ({ unit }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  return (\n    <div className=\"unit-footer\">\n      <div className=\"unit-footer__special\">\n        <p>\n          <span className=\"unit-footer__label\">Special: </span>\n          {unitDetails.specialRules}\n        </p>\n        <p>\n          <span className=\"unit-footer__label\">Keywords: </span>\n          {unitDetails.keywords}\n        </p>\n        {unitDetails.spellcaster && (\n          <p>\n            <span className=\"unit-footer__label\">Spellcaster: </span>\n            {unitDetails.spellcaster}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UnitFooter;\n","import React from 'react';\nimport UnitHeader from './UnitHeader.js';\nimport UnitTable from './UnitTable.js';\nimport UnitFooter from './UnitFooter.js';\n\nconst MultiUnitRow = ({ units, handleClickAdd, unlocks }) => {\n  return (\n    <div className=\"unit-row\">\n      <UnitHeader unit={units[0]} />\n      <UnitTable units={units} handleClickAdd={handleClickAdd} displayAddButton={true} />\n      <UnitFooter unit={units[0]} />\n    </div>\n  );\n};\n\nexport default MultiUnitRow;\n","import React from 'react';\n\nconst Banner = ({ text }) => {\n  return (\n    <div>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport Banner from 'components/common/Banner';\n\nconst UnlocksBanner = ({ armyName, unallocated }) => {\n  const tooManyHWMT = unallocated[armyName] && unallocated[armyName].hwmt;\n  const tooManyTroopsOrIrregular = unallocated[armyName] && unallocated[armyName].troopOrIrregular;\n\n  return (\n    <div className=\"unlocks-banner\">\n      {tooManyHWMT && (\n        <Banner text=\"Not enough unlocks for the amount of Heroes/War Engines/Monsters/Titans in your list\" />\n      )}\n      {tooManyTroopsOrIrregular && (\n        <Banner text=\"Not enough unlocks for the amount of Troops or Irregular Units in your list\" />\n      )}\n    </div>\n  );\n};\n\nexport default UnlocksBanner;\n","import React from 'react';\nimport MultiUnitRow from 'components/unit/MultiUnit';\nimport Button from 'components/common/Button';\nimport UnlocksBanner from 'components/UnlocksBanner';\n\nconst FactionUnitsIndex = ({\n  army,\n  goToDisplay,\n  selectUnit,\n  selectArmy,\n  fromArmyList,\n  unallocated,\n  displaySelectOtherArmy,\n}) => {\n  // All the units in the selected faction\n\n  function handleClickAdd(unit) {\n    selectUnit(unit);\n    selectArmy(army.name);\n    goToDisplay('unitSelect');\n  }\n\n  const mergedFactionList = [];\n  army.units.forEach((unit) => {\n    const mergedUnitIndex = mergedFactionList.findIndex((unitArr) => unitArr[0].name === unit.name);\n    if (mergedUnitIndex === -1) {\n      mergedFactionList.push([unit]);\n    } else {\n      mergedFactionList[mergedUnitIndex].push(unit);\n    }\n  });\n\n  return (\n    <section className=\"units-index\">\n      {displaySelectOtherArmy && <Button text=\"Select other army\" onClick={() => goToDisplay('armiesIndex')} />}\n      <UnlocksBanner armyName={army.name} unallocated={unallocated} />\n      {mergedFactionList.map((unitArr, index) => {\n        return <MultiUnitRow units={unitArr} handleClickAdd={(u) => handleClickAdd(u)} key={unitArr[0].name} />;\n      })}\n      <Button text=\"Cancel\" onClick={() => goToDisplay(fromArmyList ? 'armyList' : 'armiesIndex')} />\n    </section>\n  );\n};\n\nexport default FactionUnitsIndex;\n","import React from 'react';\nimport UnitHeader from './UnitHeader';\nimport UnitTable from './UnitTable';\nimport UnitFooter from './UnitFooter';\n\nconst Unit = ({ unit, displayEditButton, handleClickEdit }) => {\n  return (\n    <div className=\"unit-row\">\n      <UnitHeader unit={unit} displayEditButton={displayEditButton} handleClickEdit={handleClickEdit} />\n      <UnitTable units={[unit]} />\n      <UnitFooter unit={unit} />\n    </div>\n  );\n};\n\nexport default Unit;\n","import React from 'react';\nimport UnitRow from 'components/unit/Unit';\nimport Button from 'components/common/Button';\n\nconst UnitSelect = ({\n  unit,\n  armyName,\n  goToDisplay,\n  handleAddUnitToListWithArmyAndUnit,\n  editingUnit,\n  handleEditUnit,\n  handleDeleteUnit,\n  deleteConfirm,\n}) => {\n  function handleCancelClick() {\n    goToDisplay(editingUnit ? 'armyList' : 'factionUnitsIndex');\n  }\n\n  function handleSaveClick() {\n    editingUnit ? handleEditUnit(unit) : handleAddUnitToListWithArmyAndUnit(armyName, unit);\n  }\n\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  if (!deleteConfirm) {\n    return (\n      <section className=\"unit-select\">\n        <UnitRow unit={unit} displayEditButton={false} />\n        <Button text=\"Save\" onClick={handleSaveClick} />\n        {editingUnit ? <Button text=\"Delete\" onClick={() => goToDisplay('deleteConfirm')} /> : null}\n        <Button text=\"Cancel\" onClick={handleCancelClick} />\n      </section>\n    );\n  } else {\n    return (\n      <section className=\"delete-confirm\">\n        <p>Delete this unit?</p>\n        <p>{unitDetails.name}</p>\n        <Button text=\"Delete\" onClick={() => handleDeleteUnit(unit)} />\n        <Button text=\"Cancel\" onClick={() => goToDisplay('unitSelect')} />\n      </section>\n    );\n  }\n};\n\nexport default UnitSelect;\n","import React from 'react';\nimport UnitRow from 'components/unit/Unit';\nimport Button from 'components/common/Button';\nimport UnlocksBanner from 'components/UnlocksBanner';\n\nconst ArmyList = ({ armyList, goToDisplay, setFromArmyList, selectUnit, unallocated, points }) => {\n  // The list the user has been building\n\n  function handleAddUnitClick() {\n    goToDisplay('factionUnitsIndex');\n    setFromArmyList(true);\n  }\n\n  function handleEditUnitClick(unit) {\n    selectUnit(unit);\n    goToDisplay('unitSelect');\n    setFromArmyList(true);\n  }\n\n  return (\n    <section className=\"army-list\">\n      {armyList.map((faction) => {\n        return (\n          <div key={faction.name}>\n            <UnlocksBanner armyName={faction.name} unallocated={unallocated} />\n            <h2 className=\"army-list__section-heading\">{faction.name}</h2>\n            <p>{points[faction.name]} points</p>\n            {faction.units.map((unit) => {\n              return (\n                <UnitRow\n                  unit={unit}\n                  key={unit.unitId}\n                  displayEditButton={true}\n                  handleClickEdit={() => handleEditUnitClick(unit)}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n      <Button text=\"Add another unit\" onClick={handleAddUnitClick} />\n    </section>\n  );\n};\n\nexport default ArmyList;\n","const unlockAmounts = {\n  Infantry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Heavy Infantry': {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Chariot: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Cavalry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Large Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Monstrous Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Large Cavalry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n};\n\nconst calculateUnallocated = (unitsArr) => {\n  const unallocated = {\n    troopOrIrregular: null,\n    hwmt: null,\n  };\n  const unitDetailsArr = unitsArr.map((unit) => unit.unitDetails);\n  const troopsAndIrregularUnits = unitDetailsArr.filter((unit) => unit.irregular || unit.size === 'Troop');\n  const heroes = unitDetailsArr.filter((unit) => unit.size === 'Hero');\n  const warEngines = unitDetailsArr.filter((unit) => unit.size === 'War Engine');\n  const monsters = unitDetailsArr.filter((unit) => unit.size === 'Monster');\n  const titans = unitDetailsArr.filter((unit) => unit.size === 'Titan');\n\n  const unitsWithSlots = unitDetailsArr.map((unit) => {\n    if (unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size]) {\n      return { ...unit, unlocks: unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size] };\n    }\n    return unit;\n  });\n\n  troopsAndIrregularUnits.forEach((troopIrreg) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.troopOrIrregular) {\n          unit.unlocks.troopOrIrregular--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.troopOrIrregular = true;\n  });\n\n  heroes.forEach((hero) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.hero) {\n          unit.unlocks.hero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonHero = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  warEngines.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.warEngine) {\n          unit.unlocks.warEngine--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonWarEngine = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.nonHero) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  monsters.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonMonster = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  titans.forEach((titan) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonTitan = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine || unit.unlocks.nonMonster)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  // const unlocks = unitsWithSlots.reduce(\n  //   (unlocksObj, unit) => {\n  //     unit.unlocks &&\n  //       Object.keys(unit.unlocks).forEach((unlockLabel) => {\n  //         switch (unlockLabel) {\n  //           case 'troopOrIrregular':\n  //             unlocksObj.troopOrIrregular = unlocksObj.troopOrIrregular || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'hero':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'warEngine':\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monster':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'titan':\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monsterOrTitan':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'heroMonsterTitanOrWarEngineUnique':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           default:\n  //             console.log('in default in unlock switch statement');\n  //         }\n  //       });\n  //     return unlocksObj;\n  //   },\n  //   {\n  //     troopOrIrregular: false,\n  //     hero: false,\n  //     warEngine: false,\n  //     monster: false,\n  //     titan: false,\n  //   }\n  // );\n  return unallocated;\n};\n\nexport default calculateUnallocated;\n","const calculatePointsTotal = (unitsArr) => {\n  return unitsArr.reduce((total, unit) => {\n    total += unit.unitCost;\n    return total;\n  }, 0);\n};\n\nexport default calculatePointsTotal;\n","import React, { useState, useEffect, useReducer } from 'react';\nimport Button from 'components/common/Button';\nimport FactionUnitsIndex from 'components/views/FactionUnitsIndex';\nimport UnitSelect from 'components/views/UnitSelect';\nimport ArmyList from 'components/views/ArmyList';\nimport { v4 as uuidv4 } from 'uuid';\nimport armiesData from '../../data/armies.json';\nimport calculateUnallocated from '../../helpers/unlocks';\nimport calculatePointsTotal from '../../helpers/points';\n\nconst ArmiesIndex = () => {\n  const [armies, setArmies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [display, setDisplay] = useState('armiesIndex');\n  const [selectedArmy, setSelectedArmy] = useState(null);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [fromArmyList, setFromArmyList] = useState(null);\n  const [unallocated, setUnallocated] = useState({});\n  const [points, setPoints] = useState({});\n\n  const initialArmyListState = [];\n\n  const addUnitToListDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.armyName);\n    const selectedUnit = {\n      unitId: action.unitId,\n      unitDetails: action.unit,\n      selectedUpgrades: [],\n      unitCost: action.unit.cost,\n      armyName: action.armyName,\n    };\n    if (armyListIndex === -1) {\n      return [...armyListState, { name: action.armyName, units: [selectedUnit] }];\n    } else {\n      return armyListState.map((army, index) => {\n        if (index !== armyListIndex) return army;\n        return {\n          ...army,\n          units: [...army.units, selectedUnit],\n        };\n      });\n    }\n    // still need to update points values\n    // still need to set limits on number of duplicates\n  };\n\n  const editUnitDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    return armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.map((unit) => {\n          if (unit.id !== action.unit.id) return unit;\n          return action.unit;\n        }),\n      };\n    });\n    // still need to update points values\n  };\n\n  const deleteUnitDispatchFunction = (armyListState, action) => {\n    console.log('deleting unit');\n    console.log('action in deleteDispatch - ', action);\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    return armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.filter((unit) => unit.unitId !== action.unit.unitId),\n      };\n    });\n    // if last unit in army section, delete army section\n    // if last unit in list, setFromArmyList to false\n  };\n\n  const reducer = (armyListState, action) => {\n    switch (action.type) {\n      case 'addUnitToList':\n        return addUnitToListDispatchFunction(armyListState, action);\n      case 'editUnit':\n        return editUnitDispatchFunction(armyListState, action);\n      case 'deleteUnit':\n        return deleteUnitDispatchFunction(armyListState, action);\n      default:\n        throw new Error();\n    }\n  };\n  const [armyListState, dispatch] = useReducer(reducer, initialArmyListState);\n\n  const init = () => {\n    setIsLoaded(true);\n    setArmies(armiesData);\n    setDisplay('armiesIndex');\n  };\n\n  const processUnlocks = () => {\n    const unallocated = armyListState.reduce((unallocatedObj, army) => {\n      unallocatedObj[army.name] = calculateUnallocated(army.units);\n      return unallocatedObj;\n    }, {});\n    setUnallocated(unallocated);\n  };\n\n  const processPoints = () => {\n    const points = armyListState.reduce((pointsObj, army) => {\n      pointsObj[army.name] = calculatePointsTotal(army.units);\n      return pointsObj;\n    }, {});\n    setPoints(points);\n  };\n\n  useEffect(init, []);\n  useEffect(() => {\n    processUnlocks();\n    processPoints();\n  }, [armyListState]);\n\n  const handleArmyButtonClick = (armyName) => {\n    setSelectedArmy(armyName);\n    setDisplay('factionUnitsIndex');\n  };\n\n  const handleAddUnitToListWithArmyAndUnit = (armyName, unit) => {\n    dispatch({ type: 'addUnitToList', armyName, unit, unitId: uuidv4() });\n    setDisplay('armyList');\n    // then go to army list display\n  };\n\n  const handleEditUnit = (unit) => {\n    dispatch({ type: 'editUnit', unit });\n    setDisplay('armyList');\n    // fix: cancel after only clicking on one unit and not saving it\n  };\n\n  const handleDeleteUnit = (unit) => {\n    dispatch({ type: 'deleteUnit', unit });\n    setDisplay('armyList');\n    // setDisplay to armyList or armiesIndex\n  };\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else if (display === 'armiesIndex') {\n    // if flag is set that this view should be displayed\n    return (\n      <main>\n        {armies.map((army, i) => {\n          return <Button text={army.name} onClick={() => handleArmyButtonClick(army.name)} key={i} />;\n        })}\n      </main>\n    );\n  } else if (display === 'factionUnitsIndex') {\n    return (\n      <main>\n        <FactionUnitsIndex\n          army={armies.find((army) => army.name === selectedArmy)}\n          goToDisplay={setDisplay}\n          selectUnit={setSelectedUnit}\n          selectArmy={setSelectedArmy}\n          fromArmyList={fromArmyList}\n          unallocated={unallocated}\n          displaySelectOtherArmy={!!armyListState.length}\n        />\n      </main>\n    );\n  } else if (display === 'unitSelect' || display === 'deleteConfirm') {\n    return (\n      <main>\n        <UnitSelect\n          armyName={selectedArmy}\n          unit={selectedUnit}\n          goToDisplay={setDisplay}\n          handleAddUnitToListWithArmyAndUnit={handleAddUnitToListWithArmyAndUnit}\n          editingUnit={!!selectedUnit.unitId}\n          handleEditUnit={handleEditUnit}\n          handleDeleteUnit={handleDeleteUnit}\n          deleteConfirm={display === 'deleteConfirm'}\n        />\n      </main>\n    );\n  } else if (display === 'armyList') {\n    return (\n      <main>\n        <ArmyList\n          armyList={armyListState}\n          goToDisplay={setDisplay}\n          setFromArmyList={setFromArmyList}\n          selectUnit={setSelectedUnit}\n          unallocated={unallocated}\n          points={points}\n        />\n      </main>\n    );\n  }\n};\n\nexport default ArmiesIndex;\n","import React, { Component } from 'react';\nimport ArmiesIndex from 'components/views/ArmiesIndex';\n\nconst App = () => {\n  return <ArmiesIndex />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}