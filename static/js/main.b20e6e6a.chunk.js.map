{"version":3,"sources":["components/common/Button.js","components/unit/UnitHeader.js","components/unit/UnitTableRow.js","components/unit/UnitTable.js","components/unit/UnitOptions.js","components/unit/UnitArtefacts.js","components/unit/UnitFooter.js","components/unit/MultiUnit.js","components/views/FactionUnitsIndex.js","components/unit/Unit.js","components/views/UnitSelect.js","components/common/Banner.js","components/UnlocksBanner.js","components/DuplicatesBanner.js","components/views/ArmyList.js","components/views/ArmiesIndex.js","helpers/unlocks.js","helpers/points.js","helpers/duplicates.js","helpers/artefacts.js","helpers/limits.js","components/views/Index.js","App.js","serviceWorker.js","index.js"],"names":["Button","text","onClick","disabled","variant","size","UnitHeader","unit","displayEditButton","handleClickEdit","unitDetails","unitDescription","type","Row","className","Col","name","unitCost","UnitTableRow","displayAddButton","addUnit","modelCount","speed","melee","ranged","defence","height","unitStrength","attacks","nerve","cost","UnitTable","units","Table","map","key","UnitOptions","view","possibleOptions","selectedOptions","selectOption","deselectOption","isChecked","option","find","selectedOption","index","ToggleButtonGroup","ToggleButton","checked","onChange","handleChange","id","htmlFor","length","UnitArtefacts","availableArtefacts","selectArtefact","selectedArtefacts","sizeModifier","limit","filteredArtefacts","filter","artefact","DropdownButton","onSelect","artefactName","selectedArtefact","title","sort","a","b","Dropdown","Item","eventKey","as","UnitFooter","specialRules","keywords","spellcaster","options","includes","artefactsLimit","MultiUnitRow","FactionUnitsIndex","army","goToDisplay","selectUnit","selectArmy","fromArmyList","displaySelectOtherArmy","unallocated","tooManyDuplicates","handleClickAdd","window","scrollTo","mergedFactionList","forEach","mergedUnitIndex","findIndex","unitArr","push","MultiUnit","Unit","UnitSelect","armyName","handleAddUnitToListWithArmyAndUnit","editingUnit","editUnit","deleteUnit","deleteConfirm","useState","enrichedUnit","setEnrichedUnit","previousEnrichedUnit","reduce","sum","o","console","log","splice","Banner","Alert","UnlocksBanner","tooManyHWMT","hwmt","tooManyTroopsOrIrregular","troopOrIrregular","DuplicatesAndLimitsBanner","overLimits","artefactDuplicates","ArmyList","armyList","setFromArmyList","points","faction","DuplicatesBanner","unitId","handleEditUnitClick","ArmiesIndex","armies","handleArmyButtonClick","alignment","i","unlockAmounts","Infantry","Regiment","heroMonsterTitanOrWarEngineUnique","Horde","monsterOrTitan","hero","warEngine","Legion","Chariot","Cavalry","calculateUnallocated","unitsArr","unitDetailsArr","troopsAndIrregularUnits","irregular","heroes","warEngines","monsters","titans","unitsWithSlots","unlocks","troopIrreg","hasBeenAllocated","nonHero","monster","nonWarEngine","nonMonster","titan","nonTitan","calculatePointsTotal","total","types","calculateDuplicates","pointsTotal","maxOfAnyHMWT","Math","floor","isTooMany","u","calculateDuplicateArtefacts","artefacts","Object","values","number","calculateUnitLimits","overLimit","limitedOption","Index","setArmies","isLoaded","setIsLoaded","display","setDisplay","selectedArmy","setSelectedArmy","selectedUnit","setSelectedUnit","setUnallocated","setPoints","setTooManyDuplicates","setOverLimits","setArtefactDuplicates","useReducer","armyListState","action","armyListIndex","addUnitToListDispatchFunction","editUnitDispatchFunction","newArmylistState","emptyArmy","deleteUnitDispatchFunction","Error","dispatch","useEffect","armiesData","unallocatedObj","processUnlocks","pointsObj","processPoints","keys","isTooManyDuplicates","flattenedUnits","processDuplicates","processArtefacts","processLimits","uuidv4","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b20e6e6a.chunk.js","sourcesContent":["import React from 'react';\nimport BootstrapButton from 'react-bootstrap/Button';\n\nconst Button = ({ text, onClick, disabled, variant, size }) => {\n  return (\n    <BootstrapButton onClick={onClick} disabled={disabled} variant={variant} size={size}>\n      {text}\n    </BootstrapButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from 'components/common/Button.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst UnitHeader = ({ unit, displayEditButton = false, handleClickEdit = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n  const unitDescription = unitDetails.size === 'Hero' ? `Hero (${unitDetails.type})` : unitDetails.type;\n\n  return (\n    <Row className=\"unit-header\">\n      <Col className=\"unit-header__unit-name-container\">\n        <p className=\"unit-header__unit-name\">{unitDetails.name}</p>\n        {displayEditButton && <Button text=\"Edit\" onClick={() => handleClickEdit(unit)} size=\"sm\" />}\n      </Col>\n      <Col className=\"unit-header__unit-type-container\">\n        <p className=\"unit-header__unit-type\">\n          <span className=\"badge badge-secondary\">{unitDescription}</span>\n          {unit.unitCost && ` ${unit.unitCost}pts`}\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UnitHeader;\n","import React from 'react';\nimport Button from '../common/Button';\n\nconst UnitTableRow = ({ unit, displayAddButton = false, addUnit = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  return (\n    <tr className=\"unit-table-row\">\n      <td>\n        <p>{`${unitDetails.size} (${unitDetails.modelCount})`}</p>\n      </td>\n      <td>\n        <p>{unitDetails.speed}</p>\n      </td>\n      <td>\n        <p>{unitDetails.melee}</p>\n      </td>\n      <td>\n        <p>{unitDetails.ranged}</p>\n      </td>\n      <td>\n        <p>{unitDetails.defence}</p>\n      </td>\n      <td>\n        <p>{unitDetails.height}</p>\n      </td>\n      <td>\n        <p>{unitDetails.unitStrength}</p>\n      </td>\n      <td>\n        <p>{unitDetails.attacks}</p>\n      </td>\n      <td>\n        <p>{unitDetails.nerve}</p>\n      </td>\n      <td>\n        <p>{unitDetails.cost}</p>\n      </td>\n      {displayAddButton && (\n        <td>\n          <Button text=\"Add\" onClick={() => addUnit(unit)} size=\"sm\" />\n        </td>\n      )}\n    </tr>\n  );\n};\n\nexport default UnitTableRow;\n","import React from 'react';\nimport UnitTableRow from './UnitTableRow';\nimport Table from 'react-bootstrap/Table';\n\nconst UnitTable = ({ units, displayAddButton = false, addUnit = false }) => {\n  return (\n    <Table className=\"unit-table\">\n      <tbody>\n        <tr>\n          <th>\n            <p>Unit size</p>\n          </th>\n          <th>\n            <p>Sp</p>\n          </th>\n          <th>\n            <p>Me</p>\n          </th>\n          <th>\n            <p>Ra</p>\n          </th>\n          <th>\n            <p>De</p>\n          </th>\n          <th>\n            <p>H</p>\n          </th>\n          <th>\n            <p>US</p>\n          </th>\n          <th>\n            <p>Att</p>\n          </th>\n          <th>\n            <p>Ne</p>\n          </th>\n          <th>\n            <p>Pts</p>\n          </th>\n          <th></th>\n        </tr>\n        {units.map((unit) => (\n          <UnitTableRow\n            key={unit.unitDetails ? `${unit.unitDetails.name}-${unit.unitDetails.size}` : `${unit.name}-${unit.size}`}\n            unit={unit}\n            displayAddButton={displayAddButton}\n            addUnit={addUnit}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UnitTable;\n","import React from 'react';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n\nconst UnitOptions = ({ view, possibleOptions, selectedOptions, selectOption, deselectOption }) => {\n  const handleChange = (option) => {\n    selectedOptions.find((selectedOption) => selectedOption.name === option.name)\n      ? deselectOption(option)\n      : selectOption(option);\n  };\n\n  const isChecked = (option) => {\n    return !!(selectedOptions && selectedOptions.find((selectedOption) => selectedOption.name === option.name));\n  };\n\n  return (\n    <div className=\"unit-options\">\n      {view === 'unitSelect' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-options__label--select\">Options: </span>\n          </p>\n          <ul className=\"unit-options__list--select\">\n            {possibleOptions.map((option, index) => (\n              <li key={option.name}>\n                <ToggleButtonGroup type=\"checkbox\">\n                  <ToggleButton\n                    className=\"unit-options__toggle\"\n                    checked={isChecked(option)}\n                    onChange={() => handleChange(option)}\n                    id={`${option.name}-${index}`}\n                    variant={isChecked(option) ? 'success' : 'outline-success'}\n                    size=\"sm\"\n                  >\n                    {isChecked(option) ? 'Deselect' : 'Select'}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n                <label htmlFor={`${option.name}-${index}`}>\n                  {option.name}: {option.cost}pts\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {view === 'armyList' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-footer__label\">Options: </span>\n            {selectedOptions.map((option, index) => (\n              <span key={option.name}>\n                {option.name} ({option.cost}pts)\n                {index < selectedOptions.length - 1 ? ', ' : ''}\n              </span>\n            ))}\n          </p>\n        </div>\n      )}\n      {view === 'factionUnitsIndex' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-footer__label\">Options: </span>\n          </p>\n          <ul>\n            {possibleOptions.map((option) => (\n              <li key={option.name}>\n                {option.name}: {option.cost}pts\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UnitOptions;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nconst UnitArtefacts = ({ view, availableArtefacts, selectArtefact, selectedArtefacts, sizeModifier, limit = 1 }) => {\n  const filteredArtefacts =\n    availableArtefacts &&\n    availableArtefacts.filter((artefact) => sizeModifier === 'Hero' || artefact.type === 'common');\n\n  const handleSelect = (artefactName) => {\n    if (artefactName === 'None') {\n      selectArtefact(null, 0);\n    } else {\n      const selectedArtefact = availableArtefacts.find((artefact) => artefact.name === artefactName);\n      selectArtefact({ name: selectedArtefact.name, cost: selectedArtefact.cost[sizeModifier] }, 0);\n    }\n  };\n\n  return (\n    <div className=\"unit-artefacts\">\n      {view === 'unitSelect' && (\n        <div className=\"unit-artefacts--select\">\n          <DropdownButton onSelect={handleSelect} className=\"unit-artefacts__dropdown\" title=\"Artefact\" size=\"sm\">\n            {filteredArtefacts\n              .sort((a, b) => a.cost[sizeModifier] - b.cost[sizeModifier])\n              .map((artefact) => (\n                <Dropdown.Item key={artefact.name} eventKey={artefact.name} as=\"button\">\n                  {artefact.name} ({artefact.cost[sizeModifier]}pts)\n                </Dropdown.Item>\n              ))}\n          </DropdownButton>\n          <p>\n            {selectedArtefacts[0] &&\n              `${selectedArtefacts[0].name} (${selectedArtefacts[0] && selectedArtefacts[0].cost}pts)`}\n          </p>\n        </div>\n      )}\n      {view === 'armyList' && (\n        <div className=\"unit-artefacts--select\">\n          <p>\n            <span className=\"unit-footer__label\">Artefact{limit !== 1 ? 's' : ''}: </span>\n            {selectedArtefacts.map((artefact, index) => (\n              <span key={artefact.name}>\n                {artefact.name} ({artefact.cost}pts)\n                {index < selectedArtefacts.length - 1 ? ', ' : ''}\n              </span>\n            ))}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UnitArtefacts;\n","import React from 'react';\nimport UnitOptions from './UnitOptions';\nimport UnitArtefacts from './UnitArtefacts';\n\nconst UnitFooter = ({ unit, view, selectOption, deselectOption, selectArtefact, availableArtefacts }) => {\n  return (\n    <div className=\"unit-footer\">\n      <div className=\"unit-footer__special\">\n        <p>\n          <span className=\"unit-footer__label\">Special: </span>\n          {unit.unitDetails.specialRules}\n        </p>\n        <p>\n          <span className=\"unit-footer__label\">Keywords: </span>\n          {unit.unitDetails.keywords}\n        </p>\n        {unit.unitDetails.spellcaster && (\n          <p>\n            <span className=\"unit-footer__label\">Spellcaster: </span>\n            {unit.unitDetails.spellcaster}\n          </p>\n        )}\n        {view === 'factionUnitsIndex' && unit.unitDetails.options.length ? (\n          <UnitOptions possibleOptions={unit.unitDetails.options} view={view} />\n        ) : null}\n        {view === 'armyList' && unit.selectedOptions.length ? (\n          <UnitOptions selectedOptions={unit.selectedOptions} view={view} />\n        ) : null}\n        {view === 'unitSelect' && unit.unitDetails.options.length ? (\n          <UnitOptions\n            possibleOptions={unit.unitDetails.options}\n            selectedOptions={unit.selectedOptions}\n            view={view}\n            selectOption={selectOption}\n            deselectOption={deselectOption}\n          />\n        ) : null}\n        {view === 'armyList' && unit.selectedArtefacts.length ? (\n          <UnitArtefacts selectedArtefacts={unit.selectedArtefacts} view={view} />\n        ) : null}\n        {view === 'unitSelect' && !['Monster', 'War Engine', 'Titan'].includes(unit.unitDetails.size) && (\n          <UnitArtefacts\n            artefactsLimit={1}\n            availableArtefacts={availableArtefacts}\n            selectedArtefacts={unit.selectedArtefacts}\n            view={view}\n            selectArtefact={selectArtefact}\n            sizeModifier={unit.unitDetails.size}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UnitFooter;\n","import React from 'react';\nimport UnitHeader from './UnitHeader.js';\nimport UnitTable from './UnitTable.js';\nimport UnitFooter from './UnitFooter.js';\n\nconst MultiUnitRow = ({ units, addUnit, view }) => {\n  return (\n    <div className=\"multi-unit-row\">\n      <UnitHeader unit={units[0]} />\n      <UnitTable units={units} addUnit={addUnit} displayAddButton={true} />\n      <UnitFooter unit={units[0]} view={view} />\n    </div>\n  );\n};\n\nexport default MultiUnitRow;\n","import React from 'react';\nimport MultiUnit from 'components/unit/MultiUnit';\nimport Button from 'components/common/Button';\n\nconst FactionUnitsIndex = ({\n  army,\n  goToDisplay,\n  selectUnit,\n  selectArmy,\n  fromArmyList,\n  unallocated,\n  displaySelectOtherArmy,\n  tooManyDuplicates,\n}) => {\n  // All the units in the selected faction\n\n  function handleClickAdd(unit) {\n    selectUnit(unit);\n    selectArmy(army.name);\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n  }\n\n  const mergedFactionList = [];\n  army.units.forEach((unit) => {\n    const mergedUnitIndex = mergedFactionList.findIndex((unitArr) => unitArr[0].name === unit.name);\n    if (mergedUnitIndex === -1) {\n      mergedFactionList.push([unit]);\n    } else {\n      mergedFactionList[mergedUnitIndex].push(unit);\n    }\n  });\n\n  const handleDisplayOtherArmy = () => {\n    goToDisplay('armiesIndex');\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <section className=\"units-index\">\n      {displaySelectOtherArmy && <Button text=\"Select other army\" onClick={handleDisplayOtherArmy} />}\n      {mergedFactionList.map((unitArr, index) => {\n        return (\n          <MultiUnit\n            units={unitArr.map((unit) => ({\n              unitDetails: { ...unit },\n              selectedOptions: [],\n              unitCost: unit.cost,\n              selectedArtefacts: [],\n            }))}\n            addUnit={handleClickAdd}\n            key={unitArr[0].name}\n            view={'factionUnitsIndex'}\n          />\n        );\n      })}\n      <Button text=\"Cancel\" onClick={() => goToDisplay(fromArmyList ? 'armyList' : 'armiesIndex')} variant=\"warning\" />\n    </section>\n  );\n};\n\nexport default FactionUnitsIndex;\n","import React from 'react';\nimport UnitHeader from './UnitHeader';\nimport UnitTable from './UnitTable';\nimport UnitFooter from './UnitFooter';\n\nconst Unit = ({\n  unit,\n  displayEditButton,\n  handleClickEdit,\n  view,\n  selectOption,\n  deselectOption,\n  selectArtefact,\n  availableArtefacts,\n}) => {\n  return (\n    <div className=\"unit-row\">\n      <UnitHeader unit={unit} displayEditButton={displayEditButton} handleClickEdit={handleClickEdit} />\n      <UnitTable units={[unit]} />\n      <UnitFooter\n        unit={unit}\n        view={view}\n        selectOption={selectOption}\n        deselectOption={deselectOption}\n        selectArtefact={selectArtefact}\n        availableArtefacts={availableArtefacts}\n      />\n    </div>\n  );\n};\n\nexport default Unit;\n","import React, { useState } from 'react';\nimport Unit from 'components/unit/Unit';\nimport Button from 'components/common/Button';\n\nconst UnitSelect = ({\n  unit,\n  armyName,\n  goToDisplay,\n  handleAddUnitToListWithArmyAndUnit,\n  editingUnit,\n  editUnit,\n  deleteUnit,\n  deleteConfirm,\n  availableArtefacts,\n}) => {\n  const [enrichedUnit, setEnrichedUnit] = useState(\n    editingUnit && !unit.unitDetails\n      ? { unitDetails: { ...unit }, selectedOptions: [], unitCost: unit.cost, selectedArtefacts: [] }\n      : { ...unit }\n  );\n\n  const handleCancelClick = () => {\n    goToDisplay(editingUnit ? 'armyList' : 'factionUnitsIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const handleSaveClick = () => {\n    editingUnit ? editUnit(enrichedUnit) : handleAddUnitToListWithArmyAndUnit(armyName, enrichedUnit);\n  };\n\n  const handleSelectOption = (option) => {\n    const previousEnrichedUnit = { ...enrichedUnit };\n    setEnrichedUnit({\n      ...previousEnrichedUnit,\n      selectedOptions: [...previousEnrichedUnit.selectedOptions, option],\n      unitCost:\n        previousEnrichedUnit.unitDetails.cost +\n        [...previousEnrichedUnit.selectedOptions, option].reduce((sum, o) => sum + o.cost, 0),\n    });\n  };\n\n  const handleDeselectOption = (option) => {\n    const previousEnrichedUnit = { ...enrichedUnit };\n    setEnrichedUnit({\n      ...previousEnrichedUnit,\n      selectedOptions: previousEnrichedUnit.selectedOptions.filter(\n        (selectedOption) => selectedOption.name !== option.name\n      ),\n      unitCost:\n        previousEnrichedUnit.unitDetails.cost +\n        previousEnrichedUnit.selectedOptions\n          .filter((selectedOption) => selectedOption.name !== option.name)\n          .reduce((sum, o) => sum + o.cost, 0),\n    });\n  };\n\n  const handleSelectArtefact = (artefact, index) => {\n    const previousEnrichedUnit = { ...enrichedUnit };\n    console.log('in handleSelectArtefact - previousEnrichedUnit: ', previousEnrichedUnit);\n    if (!artefact) {\n      previousEnrichedUnit.selectedArtefacts.splice(index);\n    } else {\n      previousEnrichedUnit.selectedArtefacts[index] = artefact;\n    }\n    setEnrichedUnit({\n      ...previousEnrichedUnit,\n      unitCost:\n        previousEnrichedUnit.unitDetails.cost +\n        previousEnrichedUnit.selectedOptions.reduce((sum, o) => sum + o.cost, 0) +\n        [...previousEnrichedUnit.selectedArtefacts].reduce((sum, a) => sum + a.cost, 0),\n    });\n  };\n\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  const handleGoToDeleteConfirm = () => {\n    goToDisplay('deleteConfirm');\n    window.scrollTo(0, 0);\n  };\n\n  const handleGoToUnitSelect = () => {\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n  };\n\n  if (!deleteConfirm) {\n    return (\n      <section className=\"unit-select\">\n        <Unit\n          unit={enrichedUnit}\n          displayEditButton={false}\n          view=\"unitSelect\"\n          selectOption={handleSelectOption}\n          deselectOption={handleDeselectOption}\n          selectArtefact={handleSelectArtefact}\n          availableArtefacts={availableArtefacts}\n        />\n        <Button text=\"Save\" onClick={handleSaveClick} variant=\"success\" />\n        {editingUnit ? <Button text=\"Delete\" onClick={handleGoToDeleteConfirm} variant=\"danger\" /> : null}\n        <Button text=\"Cancel\" onClick={handleCancelClick} variant=\"warning\" />\n      </section>\n    );\n  } else {\n    return (\n      <section className=\"delete-confirm\">\n        <p className=\"h6\">Delete this unit?</p>\n        <p className=\"h5\">{unitDetails.name}</p>\n        <Button text=\"Delete\" onClick={() => deleteUnit(unit)} variant=\"danger\" />\n        <Button text=\"Cancel\" onClick={handleGoToUnitSelect} variant=\"warning\" />\n      </section>\n    );\n  }\n};\n\nexport default UnitSelect;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Banner = ({ text }) => {\n  return (\n    <Alert variant=\"danger\" className=\"banner\">\n      <p>{text}</p>\n    </Alert>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport Banner from 'components/common/Banner';\n\nconst UnlocksBanner = ({ armyName = null, unallocated = {} }) => {\n  const tooManyHWMT = unallocated[armyName] && unallocated[armyName].hwmt;\n  const tooManyTroopsOrIrregular = unallocated[armyName] && unallocated[armyName].troopOrIrregular;\n\n  return (\n    <div className=\"unlocks-banner\">\n      {tooManyHWMT && (\n        <Banner text=\"Not enough unlocks for the amount of Heroes/War Engines/Monsters/Titans in your list\" />\n      )}\n      {tooManyTroopsOrIrregular && (\n        <Banner text=\"Not enough unlocks for the amount of Troops or Irregular Units in your list\" />\n      )}\n    </div>\n  );\n};\n\nexport default UnlocksBanner;\n","import React from 'react';\nimport Banner from 'components/common/Banner';\n\nconst DuplicatesAndLimitsBanner = ({ tooManyDuplicates = null, overLimits = null, artefactDuplicates = null }) => {\n  return (\n    <div className=\"duplicates-and-limits-banner\">\n      {tooManyDuplicates && (\n        <Banner text=\"Too many Heroes/War Engines/Monsters/Titans of the same type for the current points total\" />\n      )}\n      {overLimits && (\n        <Banner text=\"You are over your limit on one or more living legend units, or units with the same living legend upgrade\" />\n      )}\n      {artefactDuplicates && <Banner text=\"Too many units with the same artefact\" />}\n    </div>\n  );\n};\n\nexport default DuplicatesAndLimitsBanner;\n","import React from 'react';\nimport Unit from 'components/unit/Unit';\nimport Button from 'components/common/Button';\nimport UnlocksBanner from 'components/UnlocksBanner';\nimport DuplicatesBanner from 'components/DuplicatesBanner';\n\nconst ArmyList = ({\n  armyList,\n  goToDisplay,\n  setFromArmyList,\n  selectUnit,\n  unallocated,\n  points,\n  tooManyDuplicates,\n  overLimits,\n  artefactDuplicates,\n}) => {\n  // The list the user has been building\n\n  function handleAddUnitClick() {\n    goToDisplay('factionUnitsIndex');\n    window.scrollTo(0, 0);\n    setFromArmyList(true);\n  }\n\n  function handleEditUnitClick(unit) {\n    selectUnit(unit);\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n    setFromArmyList(true);\n  }\n\n  return (\n    <section className=\"army-list\">\n      {armyList.map((faction) => (\n        <UnlocksBanner key={faction.name} armyName={faction.name} unallocated={unallocated} />\n      ))}\n      <DuplicatesBanner\n        tooManyDuplicates={tooManyDuplicates}\n        overLimits={overLimits}\n        artefactDuplicates={artefactDuplicates}\n      />\n      {armyList.map((faction) => {\n        return (\n          <div key={faction.name}>\n            <div className=\"army-list__header\">\n              <h2 className=\"army-list__section-heading\">{faction.name}</h2>\n              <p className=\"army-list__points\">{points[faction.name]} points</p>\n            </div>\n            {faction.units.map((unit) => {\n              return (\n                <Unit\n                  unit={unit}\n                  key={unit.unitId}\n                  displayEditButton={true}\n                  handleClickEdit={() => handleEditUnitClick(unit)}\n                  view={'armyList'}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n      <Button text=\"Add another unit\" onClick={handleAddUnitClick} variant=\"success\" />\n    </section>\n  );\n};\n\nexport default ArmyList;\n","import React from 'react';\nimport Button from 'components/common/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nconst ArmiesIndex = ({ armies, handleArmyButtonClick }) => {\n  return (\n    <main>\n      <div className=\"d-flex\">\n        {armies\n          .filter((army) => army.alignment === 'Good')\n          .map((army, i) => (\n            <Button text={army.name} onClick={() => handleArmyButtonClick(army.name)} key={i} variant=\"success\" />\n          ))}\n      </div>\n      <div className=\"d-flex\">\n        {armies\n          .filter((army) => army.alignment === 'Neutral')\n          .map((army, i) => (\n            <Button text={army.name} onClick={() => handleArmyButtonClick(army.name)} key={i} variant=\"warning\" />\n          ))}\n      </div>\n      <div className=\"d-flex\">\n        {armies\n          .filter((army) => army.alignment === 'Evil')\n          .map((army, i) => (\n            <Button text={army.name} onClick={() => handleArmyButtonClick(army.name)} key={i} variant=\"danger\" />\n          ))}\n      </div>\n    </main>\n  );\n};\n\nexport default ArmiesIndex;\n","const unlockAmounts = {\n  Infantry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Heavy Infantry': {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Chariot: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Cavalry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Large Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Monstrous Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Large Cavalry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n};\n\nconst calculateUnallocated = (unitsArr) => {\n  const unallocated = {\n    troopOrIrregular: null,\n    hwmt: null,\n  };\n  const unitDetailsArr = unitsArr.map((unit) => unit.unitDetails);\n  const troopsAndIrregularUnits = unitDetailsArr.filter((unit) => unit.irregular || unit.size === 'Troop');\n  const heroes = unitDetailsArr.filter((unit) => unit.size === 'Hero');\n  const warEngines = unitDetailsArr.filter((unit) => unit.size === 'War Engine');\n  const monsters = unitDetailsArr.filter((unit) => unit.size === 'Monster');\n  const titans = unitDetailsArr.filter((unit) => unit.size === 'Titan');\n\n  const unitsWithSlots = unitDetailsArr.map((unit) => {\n    if (unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size]) {\n      return { ...unit, unlocks: { ...(unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size]) } };\n    }\n    return unit;\n  });\n\n  troopsAndIrregularUnits.forEach((troopIrreg) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.troopOrIrregular) {\n          unit.unlocks.troopOrIrregular--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.troopOrIrregular = true;\n  });\n\n  heroes.forEach((hero) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.hero) {\n          unit.unlocks.hero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonHero = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  warEngines.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.warEngine) {\n          unit.unlocks.warEngine--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonWarEngine = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.nonHero) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  monsters.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonMonster = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  titans.forEach((titan) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonTitan = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine || unit.unlocks.nonMonster)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  // const unlocks = unitsWithSlots.reduce(\n  //   (unlocksObj, unit) => {\n  //     unit.unlocks &&\n  //       Object.keys(unit.unlocks).forEach((unlockLabel) => {\n  //         switch (unlockLabel) {\n  //           case 'troopOrIrregular':\n  //             unlocksObj.troopOrIrregular = unlocksObj.troopOrIrregular || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'hero':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'warEngine':\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monster':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'titan':\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monsterOrTitan':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'heroMonsterTitanOrWarEngineUnique':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           default:\n  //             console.log('in default in unlock switch statement');\n  //         }\n  //       });\n  //     return unlocksObj;\n  //   },\n  //   {\n  //     troopOrIrregular: false,\n  //     hero: false,\n  //     warEngine: false,\n  //     monster: false,\n  //     titan: false,\n  //   }\n  // );\n  return unallocated;\n};\n\nexport default calculateUnallocated;\n","const calculatePointsTotal = (unitsArr) => {\n  return unitsArr.reduce((total, unit) => {\n    total += unit.unitCost;\n    return total;\n  }, 0);\n};\n\nexport default calculatePointsTotal;\n","const types = ['Hero', 'War Engine', 'Monster', 'Titan'];\n\nconst calculateDuplicates = (pointsTotal, units) => {\n  const maxOfAnyHMWT = pointsTotal < 1500 ? 1 : Math.floor(pointsTotal / 1000) + 1;\n  return units.reduce((isTooMany, unit) => {\n    return (\n      isTooMany ||\n      (types.includes(unit.unitDetails.size) &&\n        units.filter((u) => u.unitDetails.name === unit.unitDetails.name).length > maxOfAnyHMWT)\n    );\n  }, false);\n};\n\nexport default calculateDuplicates;\n","const calculateDuplicateArtefacts = (units) => {\n  const artefacts = {};\n  units.forEach((unit) => {\n    unit.selectedArtefacts.forEach((artefact) => {\n      if (artefacts[artefact.name]) {\n        artefacts[artefact.name]++;\n      } else {\n        artefacts[artefact.name] = 1;\n      }\n    });\n  });\n  return !!Object.values(artefacts).filter((number) => number > 1).length;\n};\n\nexport default calculateDuplicateArtefacts;\n","const calculateUnitLimits = (units) => {\n  return units.reduce((overLimit, unit) => {\n    const limitedOption = unit.selectedOptions.find((option) => option.limit);\n    return (\n      overLimit ||\n      (unit.unitDetails.limit &&\n        units.filter((u) => u.unitDetails.name === unit.unitDetails.name).length > unit.unitDetails.limit) ||\n      (limitedOption &&\n        units.filter(\n          (u) =>\n            u.unitDetails.name === unit.unitDetails.name &&\n            u.selectedOptions.find((selectedOption) => limitedOption.name === selectedOption.name)\n        ).length > limitedOption.limit)\n    );\n  }, false);\n};\n\nexport default calculateUnitLimits;\n","import React, { useState, useEffect, useReducer } from 'react';\nimport FactionUnitsIndex from 'components/views/FactionUnitsIndex';\nimport UnitSelect from 'components/views/UnitSelect';\nimport ArmyList from 'components/views/ArmyList';\nimport ArmiesIndex from 'components/views/ArmiesIndex';\nimport { v4 as uuidv4 } from 'uuid';\nimport armiesData from '../../data/armies.json';\nimport artefacts from '../../data/artefacts.json';\nimport calculateUnallocated from '../../helpers/unlocks';\nimport calculatePointsTotal from '../../helpers/points';\nimport calculateDuplicates from '../../helpers/duplicates';\nimport calculateDuplicateArtefacts from '../../helpers/artefacts';\nimport calculateUnitLimits from '../../helpers/limits';\n\nconst Index = () => {\n  const [armies, setArmies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [display, setDisplay] = useState('armiesIndex');\n  const [selectedArmy, setSelectedArmy] = useState(null);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [fromArmyList, setFromArmyList] = useState(null);\n  const [unallocated, setUnallocated] = useState({});\n  const [points, setPoints] = useState({});\n  const [tooManyDuplicates, setTooManyDuplicates] = useState(null);\n  const [overLimits, setOverLimits] = useState(null);\n  const [artefactDuplicates, setArtefactDuplicates] = useState(null);\n\n  const initialArmyListState = [];\n\n  const addUnitToListDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.armyName);\n    const selectedUnit = {\n      unitId: action.unitId,\n      unitDetails: action.unit.unitDetails,\n      selectedOptions: action.unit.selectedOptions,\n      selectedArtefacts: action.unit.selectedArtefacts,\n      unitCost: action.unit.unitCost,\n      armyName: action.armyName,\n    };\n    if (armyListIndex === -1) {\n      return [...armyListState, { name: action.armyName, units: [selectedUnit] }];\n    } else {\n      return armyListState.map((army, index) => {\n        if (index !== armyListIndex) return army;\n        return {\n          ...army,\n          units: [...army.units, selectedUnit],\n        };\n      });\n    }\n    // still need to set limits on number of living legends and living legend upgrades\n  };\n\n  const editUnitDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    return armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.map((unit) => {\n          if (unit.unitId !== action.unit.unitId) return unit;\n          return action.unit;\n        }),\n      };\n    });\n  };\n\n  const deleteUnitDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    const newArmylistState = armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.filter((unit) => unit.unitId !== action.unit.unitId),\n      };\n    });\n    const emptyArmy = newArmylistState.find((army) => army.units.length === 0);\n    if (emptyArmy && selectedArmy === emptyArmy.name) {\n      setFromArmyList(false);\n      setSelectedArmy(null);\n      setDisplay('armiesIndex');\n      window.scrollTo(0, 0);\n    }\n    return newArmylistState.filter((army) => army.units.length !== 0);\n  };\n\n  const reducer = (armyListState, action) => {\n    switch (action.type) {\n      case 'addUnitToList':\n        return addUnitToListDispatchFunction(armyListState, action);\n      case 'editUnit':\n        return editUnitDispatchFunction(armyListState, action);\n      case 'deleteUnit':\n        return deleteUnitDispatchFunction(armyListState, action);\n      default:\n        throw new Error();\n    }\n  };\n  const [armyListState, dispatch] = useReducer(reducer, initialArmyListState);\n\n  const init = () => {\n    setIsLoaded(true);\n    setArmies(armiesData);\n    setDisplay('armiesIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const processUnlocks = () => {\n    const unallocated = armyListState.reduce((unallocatedObj, army) => {\n      unallocatedObj[army.name] = calculateUnallocated(army.units);\n      return unallocatedObj;\n    }, {});\n    setUnallocated(unallocated);\n  };\n\n  const processPoints = () => {\n    const points = armyListState.reduce((pointsObj, army) => {\n      pointsObj[army.name] = calculatePointsTotal(army.units);\n      return pointsObj;\n    }, {});\n    setPoints(points);\n  };\n\n  const processDuplicates = () => {\n    const pointsTotal = Object.keys(points).reduce((sum, key) => {\n      return (sum += points[key]);\n    }, 0);\n    const isTooManyDuplicates = calculateDuplicates(\n      pointsTotal,\n      armyListState.reduce((flattenedUnits, army) => {\n        return [...flattenedUnits, ...army.units];\n      }, [])\n    );\n    setTooManyDuplicates(isTooManyDuplicates);\n  };\n\n  const processLimits = () => {\n    const flattenedUnits = armyListState.reduce((unitsArr, army) => {\n      return [...unitsArr, ...army.units];\n    }, []);\n    const overLimits = calculateUnitLimits(flattenedUnits);\n    setOverLimits(overLimits);\n  };\n\n  const processArtefacts = () => {\n    const flattenedUnits = armyListState.reduce((unitsArr, army) => {\n      return [...unitsArr, ...army.units];\n    }, []);\n    const overLimit = calculateDuplicateArtefacts(flattenedUnits);\n    setArtefactDuplicates(overLimit);\n  };\n\n  useEffect(init, []);\n  useEffect(() => {\n    processUnlocks();\n    processPoints();\n    processDuplicates();\n    processArtefacts();\n    processLimits();\n    if (armyListState.length) {\n      setDisplay('armyList');\n      window.scrollTo(0, 0);\n    }\n  }, [armyListState]);\n\n  const handleArmyButtonClick = (armyName) => {\n    setSelectedArmy(armyName);\n    setDisplay('factionUnitsIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const handleAddUnitToListWithArmyAndUnit = (armyName, unit) => {\n    dispatch({ type: 'addUnitToList', armyName, unit, unitId: uuidv4() });\n  };\n\n  const handleEditUnit = (unit) => {\n    dispatch({ type: 'editUnit', unit });\n  };\n\n  const handleDeleteUnit = (unit) => {\n    dispatch({ type: 'deleteUnit', unit });\n  };\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else if (display === 'armiesIndex') {\n    return <ArmiesIndex armies={armies} handleArmyButtonClick={handleArmyButtonClick} />;\n  } else if (display === 'factionUnitsIndex') {\n    return (\n      <main>\n        <FactionUnitsIndex\n          army={armies.find((army) => army.name === selectedArmy)}\n          goToDisplay={setDisplay}\n          selectUnit={setSelectedUnit}\n          selectArmy={setSelectedArmy}\n          fromArmyList={fromArmyList}\n          unallocated={unallocated}\n          displaySelectOtherArmy={!!armyListState.length}\n          tooManyDuplicates={tooManyDuplicates}\n        />\n      </main>\n    );\n  } else if (display === 'unitSelect' || display === 'deleteConfirm') {\n    return (\n      <main>\n        <UnitSelect\n          armyName={selectedArmy}\n          unit={selectedUnit}\n          goToDisplay={setDisplay}\n          handleAddUnitToListWithArmyAndUnit={handleAddUnitToListWithArmyAndUnit}\n          editingUnit={!!selectedUnit.unitId}\n          editUnit={handleEditUnit}\n          deleteUnit={handleDeleteUnit}\n          deleteConfirm={display === 'deleteConfirm'}\n          availableArtefacts={artefacts}\n        />\n      </main>\n    );\n  } else if (display === 'armyList') {\n    return (\n      <main>\n        <ArmyList\n          armyList={armyListState}\n          goToDisplay={setDisplay}\n          setFromArmyList={setFromArmyList}\n          selectUnit={setSelectedUnit}\n          unallocated={unallocated}\n          points={points}\n          tooManyDuplicates={tooManyDuplicates}\n          artefactDuplicates={artefactDuplicates}\n          overLimits={overLimits}\n        />\n      </main>\n    );\n  }\n};\n\nexport default Index;\n","import React, { Component } from 'react';\nimport ArmiesIndex from 'components/views/Index';\n\nconst App = () => {\n  return <ArmiesIndex />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}