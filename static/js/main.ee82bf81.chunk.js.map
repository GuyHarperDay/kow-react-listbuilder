{"version":3,"sources":["components/common/Button.js","components/unit/UnitHeader.js","components/unit/UnitTableRow.js","components/unit/UnitTable.js","components/unit/UnitOptions.js","components/unit/UnitArtefacts.js","contexts/PlaneContextProvider.js","helpers/parse-halpi.js","components/unit/UnitFooter.js","components/unit/MultiUnit.js","components/common/ButtonRow.js","components/views/FactionUnitsIndex.js","components/unit/Unit.js","components/views/UnitSelect.js","components/common/Banner.js","components/UnlocksBanner.js","components/DuplicatesBanner.js","components/views/ArmyList.js","components/views/ArmiesIndex.js","components/views/PlanesIndex.js","helpers/unlocks.js","helpers/points.js","helpers/duplicates.js","helpers/artefacts.js","helpers/limits.js","components/views/Index.js","components/views/StandardIndex.js","components/views/HalpisRiftIndex.js","App.js","serviceWorker.js","index.js"],"names":["Button","text","onClick","disabled","variant","size","UnitHeader","unit","displayEditButton","handleClickEdit","unitDetails","unitDescription","type","Row","className","noGutters","name","Col","unitCost","UnitTableRow","displayAddButton","addUnit","modelCount","speed","melee","ranged","defence","height","unitStrength","attacks","nerve","cost","UnitTable","units","Table","map","key","UnitOptions","view","possibleOptions","selectedOptions","selectOption","deselectOption","isChecked","option","find","selectedOption","index","ToggleButtonGroup","onChange","handleChange","value","ToggleButton","id","htmlFor","length","UnitArtefacts","availableArtefacts","selectArtefact","selectedArtefacts","sizeModifier","limit","filteredArtefacts","filter","artefact","DropdownButton","onSelect","artefactName","selectedArtefact","title","sort","a","b","Dropdown","Item","eventKey","as","PlaneContext","React","createContext","PlaneContextProvider","children","selectedPlane","Provider","calculateAvailablePlaneSpells","planeSpells","spellcasterLevel","reduce","accumulatedSpells","spell","levels","forEach","spellLevel","level","push","n","UnitFooter","useContext","enrichedAvailableArtefacts","artefacts","pointyWizardsHatSpells","spells","spellcaster","options","allocatedSpell","enrichedOptions","specialRules","keywords","includes","artefactsLimit","selectedPointyWizardsHatSpells","MultiUnitRow","ButtonRow","sticky","childButtons","Array","isArray","child","Container","childButton","i","xs","lg","FactionUnitsIndex","army","goToDisplay","selectUnit","selectArmy","fromArmyList","displaySelectOtherArmy","handleClickAdd","window","scrollTo","mergedFactionList","mergedUnitIndex","findIndex","unitArr","useState","filteredMergedUnits","setFilteredMergedUnits","Tabs","label","typesDict","sizesDict","Hero","WE","filteredUnits","defaultActiveKey","unitType","Tab","MultiUnit","Unit","UnitSelect","armyName","handleAddUnitToListWithArmyAndUnit","editingUnit","editUnit","deleteUnit","deleteConfirm","enrichedUnit","setEnrichedUnit","previousEnrichedUnit","sum","o","splice","Banner","Alert","UnlocksBanner","unallocated","tooManyHWMT","hwmt","tooManyTroopsOrIrregular","troopOrIrregular","DuplicatesAndLimitsBanner","tooManyDuplicates","overLimits","artefactDuplicates","ArmyList","armyList","setFromArmyList","points","faction","DuplicatesBanner","unitId","handleEditUnitClick","ArmiesIndex","armies","handleArmyButtonClick","halpi","alignmentString","filterString","filteredArmies","alignment","arrayOfArmyArrays","filterAndChunk","flat","armyArr","Good","Neutral","Evil","PlanesIndex","planes","handlePlaneButtonClick","plane","unlockAmounts","Infantry","Regiment","heroMonsterTitanOrWarEngineUnique","Horde","monsterOrTitan","hero","warEngine","Legion","Chariot","Cavalry","calculateUnallocated","unitsArr","unitDetailsArr","troopsAndIrregularUnits","irregular","heroes","warEngines","monsters","titans","unitsWithSlots","unlocks","troopIrreg","hasBeenAllocated","nonHero","monster","nonWarEngine","nonMonster","titan","nonTitan","calculatePointsTotal","total","types","calculateDuplicates","pointsTotal","maxOfAnyHMWT","Math","floor","isTooMany","u","calculateDuplicateArtefacts","Object","values","number","calculateUnitLimits","overLimit","limitedOption","Index","setArmies","isLoaded","setIsLoaded","display","setDisplay","setSelectedPlane","selectedArmy","setSelectedArmy","selectedUnit","setSelectedUnit","setUnallocated","setPoints","setTooManyDuplicates","setOverLimits","setArtefactDuplicates","useReducer","armyListState","action","armyListIndex","addUnitToListDispatchFunction","editUnitDispatchFunction","newArmylistState","emptyArmy","deleteUnitDispatchFunction","Error","dispatch","useEffect","armiesData","unallocatedObj","processUnlocks","pointsObj","processPoints","keys","isTooManyDuplicates","flattenedUnits","processDuplicates","processArtefacts","processLimits","handleGoToDisplay","halpiArtefacts","to","planeName","armyData","halpiPlanesData","availablePlaneSpells","uuidv4","StandardIndex","HalpisRiftIndex","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee82bf81.chunk.js","sourcesContent":["import React from 'react';\nimport BootstrapButton from 'react-bootstrap/Button';\n\nconst Button = ({ text, onClick, disabled, variant, size }) => {\n  return (\n    <BootstrapButton onClick={onClick} disabled={disabled} variant={variant} size={size}>\n      {text}\n    </BootstrapButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from 'components/common/Button.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst UnitHeader = ({ unit, displayEditButton = false, handleClickEdit = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n  const unitDescription = unitDetails.size === 'Hero' ? `Hero (${unitDetails.type})` : unitDetails.type;\n\n  return (\n    <Row className=\"unit-header\" noGutters>\n      <div className=\"unit-header__unit-name-container\">\n        <p className=\"unit-header__unit-name\">{unitDetails.name}</p>\n        {displayEditButton && <Button text=\"Edit\" onClick={() => handleClickEdit(unit)} size=\"sm\" />}\n      </div>\n      <Col className=\"unit-header__unit-type-container\">\n        <p className=\"unit-header__unit-type\">\n          <span className=\"badge badge-secondary\">{unitDescription}</span>\n          {unit.unitCost && ` ${unit.unitCost}pts`}\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UnitHeader;\n","import React from 'react';\nimport Button from '../common/Button';\n\nconst UnitTableRow = ({ unit, displayAddButton = false, addUnit = false }) => {\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  return (\n    <tr className=\"unit-table-row\">\n      <td>\n        <p>{`${unitDetails.size} (${unitDetails.modelCount})`}</p>\n      </td>\n      <td>\n        <p>{unitDetails.speed}</p>\n      </td>\n      <td>\n        <p>{unitDetails.melee}</p>\n      </td>\n      <td>\n        <p>{unitDetails.ranged}</p>\n      </td>\n      <td>\n        <p>{unitDetails.defence}</p>\n      </td>\n      <td>\n        <p>{unitDetails.height}</p>\n      </td>\n      <td>\n        <p>{unitDetails.unitStrength}</p>\n      </td>\n      <td>\n        <p>{unitDetails.attacks}</p>\n      </td>\n      <td>\n        <p>{unitDetails.nerve}</p>\n      </td>\n      <td>\n        <p>{unitDetails.cost}</p>\n      </td>\n      {displayAddButton && (\n        <td>\n          <Button text=\"Add\" onClick={() => addUnit(unit)} size=\"sm\" />\n        </td>\n      )}\n    </tr>\n  );\n};\n\nexport default UnitTableRow;\n","import React from 'react';\nimport UnitTableRow from './UnitTableRow';\nimport Table from 'react-bootstrap/Table';\n\nconst UnitTable = ({ units, displayAddButton = false, addUnit = false }) => {\n  return (\n    <Table className=\"unit-table\">\n      <tbody>\n        <tr>\n          <th>\n            <p>Unit size</p>\n          </th>\n          <th>\n            <p>Sp</p>\n          </th>\n          <th>\n            <p>Me</p>\n          </th>\n          <th>\n            <p>Ra</p>\n          </th>\n          <th>\n            <p>De</p>\n          </th>\n          <th>\n            <p>H</p>\n          </th>\n          <th>\n            <p>US</p>\n          </th>\n          <th>\n            <p>Att</p>\n          </th>\n          <th>\n            <p>Ne</p>\n          </th>\n          <th>\n            <p>Pts</p>\n          </th>\n          <th></th>\n        </tr>\n        {units.map((unit) => (\n          <UnitTableRow\n            key={unit.unitDetails ? `${unit.unitDetails.name}-${unit.unitDetails.size}` : `${unit.name}-${unit.size}`}\n            unit={unit}\n            displayAddButton={displayAddButton}\n            addUnit={addUnit}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UnitTable;\n","import React from 'react';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n\nconst UnitOptions = ({ view, possibleOptions, selectedOptions, selectOption, deselectOption }) => {\n  const handleChange = (option) => {\n    selectedOptions.find((selectedOption) => selectedOption.name === option.name)\n      ? deselectOption(option)\n      : selectOption(option);\n  };\n\n  const isChecked = (option) => {\n    return !!(selectedOptions && selectedOptions.find((selectedOption) => selectedOption.name === option.name));\n  };\n\n  return (\n    <div className=\"unit-options\">\n      {view === 'unitSelect' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-options__label--select\">Options: </span>\n          </p>\n          <ul className=\"unit-options__list--select\">\n            {possibleOptions.map((option, index) => (\n              <li key={option.name}>\n                <ToggleButtonGroup type=\"checkbox\" onChange={() => handleChange(option)} value={isChecked(option)}>\n                  <ToggleButton\n                    className={`unit-options__toggle${isChecked(option) ? '--selected' : ''}`}\n                    id={`${option.name}-${index}`}\n                    variant={isChecked(option) ? 'success' : 'outline-success'}\n                    size=\"sm\"\n                  >\n                    {option.cost}pts\n                  </ToggleButton>\n                </ToggleButtonGroup>\n                <label htmlFor={`${option.name}-${index}`}>{option.name}</label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {view === 'armyList' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-footer__label\">Options: </span>\n            {selectedOptions.map((option, index) => (\n              <span key={option.name}>\n                {option.name} ({option.cost}pts)\n                {index < selectedOptions.length - 1 ? ', ' : ''}\n              </span>\n            ))}\n          </p>\n        </div>\n      )}\n      {view === 'factionUnitsIndex' && (\n        <div className=\"unit-options--select\">\n          <p>\n            <span className=\"unit-footer__label\">Options: </span>\n          </p>\n          <ul>\n            {possibleOptions.map((option) => (\n              <li key={option.name}>\n                {option.name}: {option.cost}pts\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UnitOptions;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nconst UnitArtefacts = ({ view, availableArtefacts, selectArtefact, selectedArtefacts, sizeModifier, limit = 1 }) => {\n  const filteredArtefacts =\n    availableArtefacts &&\n    availableArtefacts.filter((artefact) => sizeModifier === 'Hero' || artefact.type === 'common');\n\n  const handleSelect = (artefactName) => {\n    if (artefactName === 'None') {\n      selectArtefact(null, 0);\n    } else {\n      const selectedArtefact = availableArtefacts.find((artefact) => artefact.name === artefactName);\n      selectArtefact({ name: selectedArtefact.name, cost: selectedArtefact.cost[sizeModifier] }, 0);\n    }\n  };\n\n  return (\n    <div className=\"unit-artefacts\">\n      {view === 'unitSelect' && (\n        <div className=\"unit-artefacts--select\">\n          <DropdownButton onSelect={handleSelect} className=\"unit-artefacts__dropdown\" title=\"Artefact\" size=\"sm\">\n            {filteredArtefacts\n              .sort((a, b) => a.cost[sizeModifier] - b.cost[sizeModifier])\n              .map((artefact) => (\n                <Dropdown.Item\n                  key={artefact.name}\n                  eventKey={artefact.name}\n                  as=\"button\"\n                  className=\"unit-artefacts__dropdown-item\"\n                >\n                  {artefact.name} ({artefact.cost[sizeModifier]}pts)\n                </Dropdown.Item>\n              ))}\n          </DropdownButton>\n          <p>\n            {selectedArtefacts[0] &&\n              `${selectedArtefacts[0].name} (${selectedArtefacts[0] && selectedArtefacts[0].cost}pts)`}\n          </p>\n        </div>\n      )}\n      {view === 'armyList' && (\n        <div className=\"unit-artefacts--select\">\n          <p>\n            <span className=\"unit-footer__label\">Artefact{limit !== 1 ? 's' : ''}: </span>\n            {selectedArtefacts.map((artefact, index) => (\n              <span key={artefact.name}>\n                {artefact.name} ({artefact.cost}pts)\n                {index < selectedArtefacts.length - 1 ? ', ' : ''}\n              </span>\n            ))}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UnitArtefacts;\n","import React from 'react';\n\nexport const PlaneContext = React.createContext(null);\n\nexport const PlaneContextProvider = ({ children, selectedPlane }) => {\n  return <PlaneContext.Provider value={selectedPlane}>{children}</PlaneContext.Provider>;\n};\n","export const enrichArmyDataForHalpisRift = (armyData, planeSpells) => {\n  return armyData.map((army) => {\n    return {\n      ...army,\n      units: army.units.map((unit) => {\n        const spellcasterLevel = unit.spellcaster;\n        const isEligibleForPlaneSpells = spellcasterLevel && !unit.limit;\n        if (isEligibleForPlaneSpells) {\n          const availablePlaneSpells = calculateAvailablePlaneSpells(planeSpells, spellcasterLevel);\n          return { ...unit, options: [...unit.options, ...availablePlaneSpells] };\n        } else {\n          return unit;\n        }\n      }),\n    };\n  });\n};\n\nexport const calculateAvailablePlaneSpells = (planeSpells, spellcasterLevel) => {\n  return planeSpells.reduce((accumulatedSpells, spell) => {\n    spell.levels.forEach((spellLevel) => {\n      if (spellLevel.level <= spellcasterLevel)\n        accumulatedSpells.push({\n          name: `${spell.name} (${spellLevel.n})`,\n          cost: spellLevel.cost,\n          limit: spell.limit,\n          spellLevel: spellLevel.level,\n        });\n    });\n    return accumulatedSpells;\n  }, []);\n};\n","import React, { useContext } from 'react';\nimport UnitOptions from './UnitOptions';\nimport UnitArtefacts from './UnitArtefacts';\nimport { PlaneContext } from '../../contexts/PlaneContextProvider';\nimport { calculateAvailablePlaneSpells } from '../../helpers/parse-halpi';\n\nconst UnitFooter = ({ unit, view, selectOption, deselectOption, selectArtefact, availableArtefacts }) => {\n  const selectedPlane = useContext(PlaneContext);\n\n  const enrichedAvailableArtefacts =\n    availableArtefacts && selectedPlane ? [...availableArtefacts, ...selectedPlane.artefacts] : availableArtefacts;\n\n  const pointyWizardsHatSpells =\n    selectedPlane &&\n    [...calculateAvailablePlaneSpells(selectedPlane.spells, unit.unitDetails.spellcaster + 1)].filter(\n      (spell) => !unit.unitDetails.options.find((allocatedSpell) => allocatedSpell.name === spell.name)\n    );\n\n  let enrichedOptions = unit.unitDetails.options;\n  if (\n    selectedPlane &&\n    !unit.unitDetails.limit &&\n    unit.selectedArtefacts.find((artefact) => artefact.name === \"Pointy Wizard's Hat\")\n  ) {\n    enrichedOptions = [...unit.unitDetails.options, ...pointyWizardsHatSpells];\n  }\n\n  const handleSelectArtefact = (artefact) => {\n    if (pointyWizardsHatSpells) {\n      const selectedPointyWizardsHatSpells = unit.selectedOptions.filter((option) =>\n        pointyWizardsHatSpells.find((spell) => spell.name === option.name)\n      );\n      if (selectedPointyWizardsHatSpells.length && (!artefact || artefact.name !== \"Pointy Wizard's Hat\")) {\n        selectedPointyWizardsHatSpells.forEach(async (spell) => {\n          deselectOption(spell);\n        });\n      }\n    }\n    selectArtefact(artefact, 0);\n  };\n\n  return (\n    <div className=\"unit-footer\">\n      <div className=\"unit-footer__special\">\n        <p>\n          <span className=\"unit-footer__label\">Special: </span>\n          {unit.unitDetails.specialRules}\n        </p>\n        <p>\n          <span className=\"unit-footer__label\">Keywords: </span>\n          {unit.unitDetails.keywords}\n        </p>\n        {unit.unitDetails.spellcaster && (\n          <p>\n            <span className=\"unit-footer__label\">Spellcaster: </span>\n            {unit.unitDetails.spellcaster}\n          </p>\n        )}\n        {view === 'factionUnitsIndex' && unit.unitDetails.options.length ? (\n          <UnitOptions possibleOptions={unit.unitDetails.options} view={view} />\n        ) : null}\n        {view === 'armyList' && unit.selectedOptions.length ? (\n          <UnitOptions selectedOptions={unit.selectedOptions} view={view} />\n        ) : null}\n        {view === 'unitSelect' && unit.unitDetails.options.length ? (\n          <UnitOptions\n            possibleOptions={enrichedOptions}\n            selectedOptions={unit.selectedOptions}\n            view={view}\n            selectOption={selectOption}\n            deselectOption={deselectOption}\n          />\n        ) : null}\n        {view === 'armyList' && unit.selectedArtefacts.length ? (\n          <UnitArtefacts selectedArtefacts={unit.selectedArtefacts} view={view} />\n        ) : null}\n        {view === 'unitSelect' && !['Monster', 'War Engine', 'Titan'].includes(unit.unitDetails.size) && (\n          <UnitArtefacts\n            artefactsLimit={1}\n            availableArtefacts={enrichedAvailableArtefacts}\n            selectedArtefacts={unit.selectedArtefacts}\n            view={view}\n            selectArtefact={handleSelectArtefact}\n            sizeModifier={unit.unitDetails.size}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UnitFooter;\n","import React from 'react';\nimport UnitHeader from './UnitHeader.js';\nimport UnitTable from './UnitTable.js';\nimport UnitFooter from './UnitFooter.js';\n\nconst MultiUnitRow = ({ units, addUnit, view }) => {\n  return (\n    <div className=\"multi-unit-row\">\n      <UnitHeader unit={units[0]} />\n      <UnitTable units={units} addUnit={addUnit} displayAddButton={true} />\n      <UnitFooter unit={units[0]} view={view} />\n    </div>\n  );\n};\n\nexport default MultiUnitRow;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst ButtonRow = ({ children, sticky }) => {\n  const childButtons = Array.isArray(children) ? children.filter((child) => child) : [children];\n\n  return (\n    <Container className={`button-row__container${sticky ? '--sticky' : ''}`}>\n      <Row className=\"button-row__row\" noGutters={true}>\n        {childButtons.map((childButton, i) => {\n          return (\n            <Col xs={true} lg={false} className=\"button-row__column\" key={i}>\n              {childButton}\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default ButtonRow;\n","import React, { useState } from 'react';\nimport MultiUnit from 'components/unit/MultiUnit';\nimport Button from 'components/common/Button';\nimport ButtonRow from 'components/common/ButtonRow';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nconst FactionUnitsIndex = ({ army, goToDisplay, selectUnit, selectArmy, fromArmyList, displaySelectOtherArmy }) => {\n  // All the units in the selected faction\n\n  const handleClickAdd = (unit) => {\n    selectUnit(unit);\n    selectArmy(army.name);\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n  };\n\n  const mergedFactionList = [];\n  army.units.forEach((unit) => {\n    const mergedUnitIndex = mergedFactionList.findIndex((unitArr) => unitArr[0].name === unit.name);\n    if (mergedUnitIndex === -1) {\n      mergedFactionList.push([unit]);\n    } else {\n      mergedFactionList[mergedUnitIndex].push(unit);\n    }\n  });\n\n  const [filteredMergedUnits, setFilteredMergedUnits] = useState(\n    [...mergedFactionList].filter(\n      (unitArr) =>\n        ['Infantry', 'Heavy Infantry'].includes(unitArr[0].type) &&\n        !['Hero', 'War Engine', 'Monster', 'Titan'].includes(unitArr[0].size)\n    )\n  );\n\n  const handleDisplayOtherArmy = () => {\n    goToDisplay('armiesIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const handleSelectTab = (label) => {\n    const typesDict = {\n      'Inf/HI': ['Infantry', 'Heavy Infantry'],\n      'Cav/Cht/LC': ['Cavalry', 'Chariot', 'Large Cavalry'],\n      'Sw/LI/MI': ['Swarm', 'Large Infantry', 'Monstrous Infantry'],\n    };\n    const sizesDict = {\n      Hero: ['Hero'],\n      WE: ['War Engine'],\n      'Mon/Tit': ['Monster', 'Titan'],\n    };\n    const filteredUnits = [...mergedFactionList].filter((unitArr) => {\n      if (typesDict[label]) {\n        return (\n          typesDict[label].includes(unitArr[0].type) &&\n          !['Hero', 'War Engine', 'Monster', 'Titan'].includes(unitArr[0].size)\n        );\n      } else {\n        return sizesDict[label].includes(unitArr[0].size);\n      }\n    });\n    setFilteredMergedUnits(filteredUnits);\n  };\n\n  return (\n    <section className=\"units-index\">\n      {displaySelectOtherArmy && (\n        <ButtonRow sticky={false}>\n          <Button text=\"Select other army\" onClick={handleDisplayOtherArmy} />\n        </ButtonRow>\n      )}\n      <Tabs className=\"units-index__tabs\" onSelect={handleSelectTab} variant=\"tabs\" defaultActiveKey=\"Inf/HI\">\n        {['Inf/HI', 'Cav/Cht/LC', 'Sw/LI/MI', 'Hero', 'WE', 'Mon/Tit'].map((unitType) => {\n          return (\n            <Tab className=\"units-index__tab\" eventKey={unitType} title={unitType} key={unitType}>\n              {filteredMergedUnits.length ? (\n                filteredMergedUnits.map((unitArr, index) => {\n                  return (\n                    <MultiUnit\n                      units={unitArr.map((unit) => ({\n                        unitDetails: { ...unit },\n                        selectedOptions: [],\n                        unitCost: unit.cost,\n                        selectedArtefacts: [],\n                      }))}\n                      addUnit={handleClickAdd}\n                      key={unitArr[0].name}\n                      view={'factionUnitsIndex'}\n                    />\n                  );\n                })\n              ) : (\n                <p>No units of this type in faction</p>\n              )}\n              {}\n            </Tab>\n          );\n        })}\n      </Tabs>\n      <ButtonRow sticky={true}>\n        <Button\n          text=\"Cancel\"\n          onClick={() => goToDisplay(fromArmyList ? 'armyList' : 'armiesIndex')}\n          variant=\"warning\"\n        />\n      </ButtonRow>\n    </section>\n  );\n};\n\nexport default FactionUnitsIndex;\n","import React from 'react';\nimport UnitHeader from './UnitHeader';\nimport UnitTable from './UnitTable';\nimport UnitFooter from './UnitFooter';\n\nconst Unit = ({\n  unit,\n  displayEditButton,\n  handleClickEdit,\n  view,\n  selectOption,\n  deselectOption,\n  selectArtefact,\n  availableArtefacts,\n}) => {\n  return (\n    <div className=\"unit-row\">\n      <UnitHeader unit={unit} displayEditButton={displayEditButton} handleClickEdit={handleClickEdit} />\n      <UnitTable units={[unit]} />\n      <UnitFooter\n        unit={unit}\n        view={view}\n        selectOption={selectOption}\n        deselectOption={deselectOption}\n        selectArtefact={selectArtefact}\n        availableArtefacts={availableArtefacts}\n      />\n    </div>\n  );\n};\n\nexport default Unit;\n","import React, { useState } from 'react';\nimport Unit from 'components/unit/Unit';\nimport Button from 'components/common/Button';\nimport ButtonRow from 'components/common/ButtonRow';\n\nconst UnitSelect = ({\n  unit,\n  armyName,\n  goToDisplay,\n  handleAddUnitToListWithArmyAndUnit,\n  editingUnit,\n  editUnit,\n  deleteUnit,\n  deleteConfirm,\n  availableArtefacts,\n}) => {\n  const [enrichedUnit, setEnrichedUnit] = useState(\n    editingUnit && !unit.unitDetails\n      ? { unitDetails: { ...unit }, selectedOptions: [], unitCost: unit.cost, selectedArtefacts: [] }\n      : { ...unit }\n  );\n\n  const handleCancelClick = () => {\n    goToDisplay(editingUnit ? 'armyList' : 'factionUnitsIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const handleSaveClick = () => {\n    editingUnit ? editUnit(enrichedUnit) : handleAddUnitToListWithArmyAndUnit(armyName, enrichedUnit);\n  };\n\n  const handleSelectOption = (option) => {\n    setEnrichedUnit((previousEnrichedUnit) => ({\n      ...previousEnrichedUnit,\n      selectedOptions: [...previousEnrichedUnit.selectedOptions, option],\n      unitCost:\n        previousEnrichedUnit.unitDetails.cost +\n        [...previousEnrichedUnit.selectedOptions, option].reduce((sum, o) => sum + o.cost, 0) +\n        [...previousEnrichedUnit.selectedArtefacts].reduce((sum, a) => sum + a.cost, 0),\n    }));\n  };\n\n  const handleDeselectOption = (option) => {\n    setEnrichedUnit((previousEnrichedUnit) => ({\n      ...previousEnrichedUnit,\n      selectedOptions: previousEnrichedUnit.selectedOptions.filter(\n        (selectedOption) => selectedOption.name !== option.name\n      ),\n      unitCost:\n        previousEnrichedUnit.unitDetails.cost +\n        previousEnrichedUnit.selectedOptions\n          .filter((selectedOption) => selectedOption.name !== option.name)\n          .reduce((sum, o) => sum + o.cost, 0) +\n        [...previousEnrichedUnit.selectedArtefacts].reduce((sum, a) => sum + a.cost, 0),\n    }));\n  };\n\n  const handleSelectArtefact = (artefact, index) => {\n    setEnrichedUnit((previousEnrichedUnit) => {\n      if (!artefact) {\n        previousEnrichedUnit.selectedArtefacts.splice(index);\n      } else {\n        previousEnrichedUnit.selectedArtefacts[index] = artefact;\n      }\n      return {\n        ...previousEnrichedUnit,\n        unitCost:\n          previousEnrichedUnit.unitDetails.cost +\n          previousEnrichedUnit.selectedOptions.reduce((sum, o) => sum + o.cost, 0) +\n          [...previousEnrichedUnit.selectedArtefacts].reduce((sum, a) => sum + a.cost, 0),\n      };\n    });\n  };\n\n  const unitDetails = unit.unitDetails ? unit.unitDetails : unit;\n\n  const handleGoToDeleteConfirm = () => {\n    goToDisplay('deleteConfirm');\n    window.scrollTo(0, 0);\n  };\n\n  const handleGoToUnitSelect = () => {\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n  };\n\n  if (!deleteConfirm) {\n    return (\n      <section className=\"unit-select\">\n        <Unit\n          unit={enrichedUnit}\n          displayEditButton={false}\n          view=\"unitSelect\"\n          selectOption={handleSelectOption}\n          deselectOption={handleDeselectOption}\n          selectArtefact={handleSelectArtefact}\n          availableArtefacts={availableArtefacts}\n        />\n        <ButtonRow sticky={true}>\n          <Button text=\"Save\" onClick={handleSaveClick} variant=\"success\" />\n          {editingUnit ? <Button text=\"Delete\" onClick={handleGoToDeleteConfirm} variant=\"danger\" /> : null}\n          <Button text=\"Cancel\" onClick={handleCancelClick} variant=\"warning\" />\n        </ButtonRow>\n      </section>\n    );\n  } else {\n    return (\n      <section className=\"delete-confirm\">\n        <div className=\"delete-confirm__container\">\n          <p className=\"h6\">Delete this unit?</p>\n          <p className=\"h5\">{unitDetails.name}</p>\n        </div>\n        <ButtonRow sticky={true}>\n          <Button text=\"Delete\" onClick={() => deleteUnit(unit)} variant=\"danger\" />\n          <Button text=\"Cancel\" onClick={handleGoToUnitSelect} variant=\"warning\" />\n        </ButtonRow>\n      </section>\n    );\n  }\n};\n\nexport default UnitSelect;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Banner = ({ text }) => {\n  return (\n    <Alert variant=\"danger\" className=\"banner\">\n      <p>{text}</p>\n    </Alert>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport Banner from 'components/common/Banner';\n\nconst UnlocksBanner = ({ armyName = null, unallocated = {} }) => {\n  const tooManyHWMT = unallocated[armyName] && unallocated[armyName].hwmt;\n  const tooManyTroopsOrIrregular = unallocated[armyName] && unallocated[armyName].troopOrIrregular;\n\n  return (\n    <div className=\"unlocks-banner\">\n      {tooManyHWMT && (\n        <Banner text=\"Not enough unlocks for the amount of Heroes/War Engines/Monsters/Titans in your list\" />\n      )}\n      {tooManyTroopsOrIrregular && (\n        <Banner text=\"Not enough unlocks for the amount of Troops or Irregular Units in your list\" />\n      )}\n    </div>\n  );\n};\n\nexport default UnlocksBanner;\n","import React from 'react';\nimport Banner from 'components/common/Banner';\n\nconst DuplicatesAndLimitsBanner = ({ tooManyDuplicates = null, overLimits = null, artefactDuplicates = null }) => {\n  return (\n    <div className=\"duplicates-and-limits-banner\">\n      {tooManyDuplicates && (\n        <Banner text=\"Too many Heroes/War Engines/Monsters/Titans of the same type for the current points total\" />\n      )}\n      {overLimits && (\n        <Banner text=\"You are over your limit on one or more living legend units, or units with the same living legend upgrade\" />\n      )}\n      {artefactDuplicates && <Banner text=\"Too many units with the same artefact\" />}\n    </div>\n  );\n};\n\nexport default DuplicatesAndLimitsBanner;\n","import React from 'react';\nimport Unit from 'components/unit/Unit';\nimport Button from 'components/common/Button';\nimport ButtonRow from 'components/common/ButtonRow';\nimport UnlocksBanner from 'components/UnlocksBanner';\nimport DuplicatesBanner from 'components/DuplicatesBanner';\n\nconst ArmyList = ({\n  armyList,\n  goToDisplay,\n  setFromArmyList,\n  selectUnit,\n  unallocated,\n  points,\n  tooManyDuplicates,\n  overLimits,\n  artefactDuplicates,\n}) => {\n  // The list the user has been building\n\n  const handleAddUnitClick = () => {\n    goToDisplay('factionUnitsIndex');\n    window.scrollTo(0, 0);\n    setFromArmyList(true);\n  };\n\n  const handleEditUnitClick = (unit) => {\n    selectUnit(unit);\n    goToDisplay('unitSelect');\n    window.scrollTo(0, 0);\n    setFromArmyList(true);\n  };\n\n  return (\n    <section className=\"army-list\">\n      {armyList.map((faction) => (\n        <UnlocksBanner key={faction.name} armyName={faction.name} unallocated={unallocated} />\n      ))}\n      <DuplicatesBanner\n        tooManyDuplicates={tooManyDuplicates}\n        overLimits={overLimits}\n        artefactDuplicates={artefactDuplicates}\n      />\n      {armyList.map((faction) => {\n        return (\n          <div key={faction.name}>\n            <div className=\"army-list__header\">\n              <h2 className=\"army-list__section-heading\">{faction.name}</h2>\n              <p className=\"army-list__points\">{points[faction.name]} points</p>\n            </div>\n            {faction.units.map((unit) => {\n              return (\n                <Unit\n                  unit={unit}\n                  key={unit.unitId}\n                  displayEditButton={true}\n                  handleClickEdit={() => handleEditUnitClick(unit)}\n                  view={'armyList'}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n      <ButtonRow sticky={true}>\n        <Button text=\"Add another unit\" onClick={handleAddUnitClick} variant=\"success\" />\n      </ButtonRow>\n    </section>\n  );\n};\n\nexport default ArmyList;\n","import React from 'react';\nimport Button from 'components/common/Button';\nimport ButtonRow from 'components/common/ButtonRow';\n\nconst ArmiesIndex = ({ armies, handleArmyButtonClick, halpi = false, goToDisplay }) => {\n  const filterAndChunk = (filterString) => {\n    const filteredArmies = armies.filter((army) => army.alignment === filterString);\n    const arrayOfArmyArrays = [];\n    filteredArmies.forEach((army, i) => {\n      if (i % 3 === 0) {\n        arrayOfArmyArrays.push([army]);\n      } else {\n        arrayOfArmyArrays[arrayOfArmyArrays.length - 1].push(army);\n      }\n    });\n    return arrayOfArmyArrays;\n  };\n  return (\n    <section className=\"armies-index\">\n      {['Good', 'Neutral', 'Evil']\n        .map((alignmentString) => filterAndChunk(alignmentString))\n        .flat()\n        .map((armyArr, i) => {\n          return (\n            <ButtonRow className=\"armies-index__button-row\" key={i}>\n              {armyArr.map((army) => (\n                <Button\n                  text={army.name}\n                  onClick={() => handleArmyButtonClick(army.name)}\n                  key={army.name}\n                  variant={{ Good: 'success', Neutral: 'warning', Evil: 'danger' }[army.alignment]}\n                />\n              ))}\n            </ButtonRow>\n          );\n        })}\n      {halpi && (\n        <ButtonRow sticky={true}>\n          <Button text=\"Cancel\" onClick={() => goToDisplay('planesIndex')} variant=\"warning\" />\n        </ButtonRow>\n      )}\n    </section>\n  );\n};\n\nexport default ArmiesIndex;\n","import React from 'react';\nimport Button from 'components/common/Button';\nimport ButtonRow from 'components/common/ButtonRow';\n\nconst PlanesIndex = ({ planes, handlePlaneButtonClick }) => {\n  return (\n    <main className=\"planes-index\">\n      {planes.map((plane) => (\n        <ButtonRow className=\"planes-index__button-row\" key={plane.name}>\n          <Button\n            text={plane.name}\n            onClick={() => handlePlaneButtonClick(plane.name)}\n            variant={\n              {\n                'The Empyrean Plane': 'success',\n                'The Ethereal Plane': 'dark',\n                'The Material Plane': 'warning',\n                'The Abyssal Plane': 'danger',\n                'The Astral Plane': 'primary',\n              }[plane.name]\n            }\n          />\n        </ButtonRow>\n      ))}\n    </main>\n  );\n};\n\nexport default PlanesIndex;\n","const unlockAmounts = {\n  Infantry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Heavy Infantry': {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Chariot: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  Cavalry: {\n    Regiment: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 1,\n    },\n    Horde: {\n      troopOrIrregular: 4,\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n    Legion: {\n      monsterOrTitan: 1,\n      hero: 1,\n      warEngine: 1,\n    },\n  },\n  'Large Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Monstrous Infantry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n  'Large Cavalry': {\n    Horde: {\n      troopOrIrregular: 2,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n    Legion: {\n      troopOrIrregular: 4,\n      heroMonsterTitanOrWarEngineUnique: 2,\n    },\n  },\n};\n\nconst calculateUnallocated = (unitsArr) => {\n  const unallocated = {\n    troopOrIrregular: null,\n    hwmt: null,\n  };\n  const unitDetailsArr = unitsArr.map((unit) => unit.unitDetails);\n  const troopsAndIrregularUnits = unitDetailsArr.filter((unit) => unit.irregular || unit.size === 'Troop');\n  const heroes = unitDetailsArr.filter((unit) => unit.size === 'Hero');\n  const warEngines = unitDetailsArr.filter((unit) => unit.size === 'War Engine');\n  const monsters = unitDetailsArr.filter((unit) => unit.size === 'Monster');\n  const titans = unitDetailsArr.filter((unit) => unit.size === 'Titan');\n\n  const unitsWithSlots = unitDetailsArr.map((unit) => {\n    if (unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size]) {\n      return { ...unit, unlocks: { ...(unlockAmounts[unit.type] && unlockAmounts[unit.type][unit.size]) } };\n    }\n    return unit;\n  });\n\n  troopsAndIrregularUnits.forEach((troopIrreg) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.troopOrIrregular) {\n          unit.unlocks.troopOrIrregular--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.troopOrIrregular = true;\n  });\n\n  heroes.forEach((hero) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.hero) {\n          unit.unlocks.hero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonHero = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  warEngines.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.warEngine) {\n          unit.unlocks.warEngine--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonWarEngine = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.nonHero) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  monsters.forEach((monster) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonMonster = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  titans.forEach((titan) => {\n    let hasBeenAllocated = false;\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && unit.unlocks.monsterOrTitan) {\n          unit.unlocks.monsterOrTitan--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) {\n      unitsWithSlots.forEach((unit) => {\n        if (!hasBeenAllocated) {\n          if (unit.unlocks && unit.unlocks.heroMonsterTitanOrWarEngineUnique) {\n            unit.unlocks.nonTitan = unit.unlocks.heroMonsterTitanOrWarEngineUnique - 1;\n            delete unit.unlocks.heroMonsterTitanOrWarEngineUnique;\n            hasBeenAllocated = true;\n          }\n        }\n      });\n    }\n    unitsWithSlots.forEach((unit) => {\n      if (!hasBeenAllocated) {\n        if (unit.unlocks && (unit.unlocks.nonHero || unit.unlocks.nonWarEngine || unit.unlocks.nonMonster)) {\n          unit.unlocks.nonHero--;\n          hasBeenAllocated = true;\n        }\n      }\n    });\n    if (!hasBeenAllocated) unallocated.hwmt = true;\n  });\n\n  // const unlocks = unitsWithSlots.reduce(\n  //   (unlocksObj, unit) => {\n  //     unit.unlocks &&\n  //       Object.keys(unit.unlocks).forEach((unlockLabel) => {\n  //         switch (unlockLabel) {\n  //           case 'troopOrIrregular':\n  //             unlocksObj.troopOrIrregular = unlocksObj.troopOrIrregular || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'hero':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'warEngine':\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monster':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'titan':\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'monsterOrTitan':\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           case 'heroMonsterTitanOrWarEngineUnique':\n  //             unlocksObj.hero = unlocksObj.hero || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.warEngine = unlocksObj.warEngine || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.monster = unlocksObj.monster || !!unit.unlocks[unlockLabel];\n  //             unlocksObj.titan = unlocksObj.titan || !!unit.unlocks[unlockLabel];\n  //             break;\n  //           default:\n  //             console.log('in default in unlock switch statement');\n  //         }\n  //       });\n  //     return unlocksObj;\n  //   },\n  //   {\n  //     troopOrIrregular: false,\n  //     hero: false,\n  //     warEngine: false,\n  //     monster: false,\n  //     titan: false,\n  //   }\n  // );\n  return unallocated;\n};\n\nexport default calculateUnallocated;\n","const calculatePointsTotal = (unitsArr) => {\n  return unitsArr.reduce((total, unit) => {\n    total += unit.unitCost;\n    return total;\n  }, 0);\n};\n\nexport default calculatePointsTotal;\n","const types = ['Hero', 'War Engine', 'Monster', 'Titan'];\n\nconst calculateDuplicates = (pointsTotal, units) => {\n  const maxOfAnyHMWT = pointsTotal < 1500 ? 1 : Math.floor(pointsTotal / 1000) + 1;\n  return units.reduce((isTooMany, unit) => {\n    return (\n      isTooMany ||\n      (types.includes(unit.unitDetails.size) &&\n        units.filter((u) => u.unitDetails.name === unit.unitDetails.name).length > maxOfAnyHMWT)\n    );\n  }, false);\n};\n\nexport default calculateDuplicates;\n","const calculateDuplicateArtefacts = (units) => {\n  const artefacts = {};\n  units.forEach((unit) => {\n    unit.selectedArtefacts.forEach((artefact) => {\n      if (artefacts[artefact.name]) {\n        artefacts[artefact.name]++;\n      } else {\n        artefacts[artefact.name] = 1;\n      }\n    });\n  });\n  return !!Object.values(artefacts).filter((number) => number > 1).length;\n};\n\nexport default calculateDuplicateArtefacts;\n","const calculateUnitLimits = (units) => {\n  return units.reduce((overLimit, unit) => {\n    const limitedOption = unit.selectedOptions.find((option) => option.limit);\n    return (\n      overLimit ||\n      (unit.unitDetails.limit &&\n        units.filter((u) => u.unitDetails.name === unit.unitDetails.name).length > unit.unitDetails.limit) ||\n      (limitedOption &&\n        units.filter(\n          (u) =>\n            u.unitDetails.name === unit.unitDetails.name &&\n            u.selectedOptions.find((selectedOption) => limitedOption.name === selectedOption.name)\n        ).length > limitedOption.limit)\n    );\n  }, false);\n};\n\nexport default calculateUnitLimits;\n","import React, { useState, useEffect, useReducer } from 'react';\nimport FactionUnitsIndex from 'components/views/FactionUnitsIndex';\nimport UnitSelect from 'components/views/UnitSelect';\nimport ArmyList from 'components/views/ArmyList';\nimport ArmiesIndex from 'components/views/ArmiesIndex';\nimport PlanesIndex from 'components/views/PlanesIndex';\nimport { PlaneContextProvider } from 'contexts/PlaneContextProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport armiesData from '../../data/armies.json';\nimport halpiPlanesData from '../../data/halpi-planes.json';\nimport artefacts from '../../data/artefacts.json';\nimport halpiArtefacts from '../../data/halpi-artefacts.json';\nimport calculateUnallocated from '../../helpers/unlocks';\nimport calculatePointsTotal from '../../helpers/points';\nimport calculateDuplicates from '../../helpers/duplicates';\nimport calculateDuplicateArtefacts from '../../helpers/artefacts';\nimport { enrichArmyDataForHalpisRift } from '../../helpers/parse-halpi';\nimport calculateUnitLimits from '../../helpers/limits';\nimport { Link } from 'react-router-dom';\n\nconst Index = ({ type = 'standard' }) => {\n  const [armies, setArmies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [display, setDisplay] = useState(type === 'halpi' ? 'planesIndex' : 'armiesIndex');\n  const [selectedPlane, setSelectedPlane] = useState(null);\n  const [selectedArmy, setSelectedArmy] = useState(null);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [fromArmyList, setFromArmyList] = useState(null);\n  const [unallocated, setUnallocated] = useState({});\n  const [points, setPoints] = useState({});\n  const [tooManyDuplicates, setTooManyDuplicates] = useState(null);\n  const [overLimits, setOverLimits] = useState(null);\n  const [artefactDuplicates, setArtefactDuplicates] = useState(null);\n\n  const initialArmyListState = [];\n\n  const addUnitToListDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.armyName);\n    const selectedUnit = {\n      unitId: action.unitId,\n      unitDetails: action.unit.unitDetails,\n      selectedOptions: action.unit.selectedOptions,\n      selectedArtefacts: action.unit.selectedArtefacts,\n      unitCost: action.unit.unitCost,\n      armyName: action.armyName,\n    };\n    if (armyListIndex === -1) {\n      return [...armyListState, { name: action.armyName, units: [selectedUnit] }];\n    } else {\n      return armyListState.map((army, index) => {\n        if (index !== armyListIndex) return army;\n        return {\n          ...army,\n          units: [...army.units, selectedUnit],\n        };\n      });\n    }\n    // still need to set limits on number of living legends and living legend upgrades\n  };\n\n  const editUnitDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    return armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.map((unit) => {\n          if (unit.unitId !== action.unit.unitId) return unit;\n          return action.unit;\n        }),\n      };\n    });\n  };\n\n  const deleteUnitDispatchFunction = (armyListState, action) => {\n    const armyListIndex = armyListState.findIndex((armyList) => armyList.name === action.unit.armyName);\n    const newArmylistState = armyListState.map((army, index) => {\n      if (index !== armyListIndex) return army;\n      return {\n        ...army,\n        units: army.units.filter((unit) => unit.unitId !== action.unit.unitId),\n      };\n    });\n    const emptyArmy = newArmylistState.find((army) => army.units.length === 0);\n    if (emptyArmy && selectedArmy === emptyArmy.name) {\n      setFromArmyList(false);\n      setSelectedArmy(null);\n      setDisplay('armiesIndex');\n      window.scrollTo(0, 0);\n    }\n    return newArmylistState.filter((army) => army.units.length !== 0);\n  };\n\n  const reducer = (armyListState, action) => {\n    switch (action.type) {\n      case 'addUnitToList':\n        return addUnitToListDispatchFunction(armyListState, action);\n      case 'editUnit':\n        return editUnitDispatchFunction(armyListState, action);\n      case 'deleteUnit':\n        return deleteUnitDispatchFunction(armyListState, action);\n      default:\n        throw new Error();\n    }\n  };\n  const [armyListState, dispatch] = useReducer(reducer, initialArmyListState);\n\n  const init = () => {\n    setIsLoaded(true);\n    setArmies(armiesData);\n    window.scrollTo(0, 0);\n  };\n\n  const processUnlocks = () => {\n    const unallocated = armyListState.reduce((unallocatedObj, army) => {\n      unallocatedObj[army.name] = calculateUnallocated(army.units);\n      return unallocatedObj;\n    }, {});\n    setUnallocated(unallocated);\n  };\n\n  const processPoints = () => {\n    const points = armyListState.reduce((pointsObj, army) => {\n      pointsObj[army.name] = calculatePointsTotal(army.units);\n      return pointsObj;\n    }, {});\n    setPoints(points);\n  };\n\n  const processDuplicates = () => {\n    const pointsTotal = Object.keys(points).reduce((sum, key) => {\n      return (sum += points[key]);\n    }, 0);\n    const isTooManyDuplicates = calculateDuplicates(\n      pointsTotal,\n      armyListState.reduce((flattenedUnits, army) => {\n        return [...flattenedUnits, ...army.units];\n      }, [])\n    );\n    setTooManyDuplicates(isTooManyDuplicates);\n  };\n\n  const processLimits = () => {\n    const flattenedUnits = armyListState.reduce((unitsArr, army) => {\n      return [...unitsArr, ...army.units];\n    }, []);\n    const overLimits = calculateUnitLimits(flattenedUnits);\n    setOverLimits(overLimits);\n  };\n\n  const processArtefacts = () => {\n    const flattenedUnits = armyListState.reduce((unitsArr, army) => {\n      return [...unitsArr, ...army.units];\n    }, []);\n    const overLimit = calculateDuplicateArtefacts(flattenedUnits);\n    setArtefactDuplicates(overLimit);\n  };\n\n  useEffect(init, []);\n  useEffect(() => {\n    processUnlocks();\n    processPoints();\n    processDuplicates();\n    processArtefacts();\n    processLimits();\n    if (armyListState.length) {\n      setDisplay('armyList');\n      window.scrollTo(0, 0);\n    }\n  }, [armyListState]);\n\n  const handleArmyButtonClick = (armyName) => {\n    setSelectedArmy(armyName);\n    setDisplay('factionUnitsIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const handleAddUnitToListWithArmyAndUnit = (armyName, unit) => {\n    dispatch({ type: 'addUnitToList', armyName, unit, unitId: uuidv4() });\n  };\n\n  const handleEditUnit = (unit) => {\n    dispatch({ type: 'editUnit', unit });\n  };\n\n  const handleDeleteUnit = (unit) => {\n    dispatch({ type: 'deleteUnit', unit });\n  };\n\n  const handleGoToDisplay = (display) => {\n    setDisplay(display);\n    window.scrollTo(0, 0);\n  };\n\n  const handlePlaneButtonClick = (planeName) => {\n    setSelectedPlane(planeName);\n    setArmies(\n      enrichArmyDataForHalpisRift(armiesData, halpiPlanesData.find((plane) => plane.name === planeName).spells)\n    );\n    setDisplay('armiesIndex');\n    window.scrollTo(0, 0);\n  };\n\n  const enrichedAvailableArtefacts = type === 'halpi' ? [...artefacts, ...halpiArtefacts] : [...artefacts];\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else if (display === 'planesIndex') {\n    return (\n      <main>\n        <header>\n          <p className=\"switch-view\">\n            This listbuilder contains units available in the Halpi's Rift campaign, including FAQs up to 1.1 and Clash\n            of Kings 2021. For standard KOW v3 listbuilding, <Link to=\"/kow-react-listbuilder\">click here</Link>\n          </p>\n        </header>\n        <PlanesIndex handlePlaneButtonClick={handlePlaneButtonClick} planes={halpiPlanesData} />\n      </main>\n    );\n  } else if (display === 'armiesIndex') {\n    return (\n      <main>\n        <header>\n          {type === 'halpi' && (\n            <p className=\"switch-view\">\n              This listbuilder contains units available in the Halpi's Rift campaign, including FAQs up to 1.1 and Clash\n              of Kings 2021. For standard KOW v3 listbuilding, <Link to=\"/kow-react-listbuilder\">click here</Link>\n            </p>\n          )}\n          {type === 'standard' && (\n            <p className=\"switch-view\">\n              This listbuilder contains units available in Kings of War v3 rules, including FAQs up to 1.1 and Clash of\n              Kings 2021. For Halpi's Rift campaign listbuilding,{' '}\n              <Link to=\"/kow-react-listbuilder/halpis-rift\">click here</Link>\n            </p>\n          )}\n        </header>\n        <ArmiesIndex\n          armies={armies}\n          handleArmyButtonClick={handleArmyButtonClick}\n          halpi={type === 'halpi'}\n          goToDisplay={handleGoToDisplay}\n        />\n      </main>\n    );\n  } else if (display === 'factionUnitsIndex') {\n    return (\n      <main>\n        <FactionUnitsIndex\n          army={armies.find((army) => army.name === selectedArmy)}\n          goToDisplay={handleGoToDisplay}\n          selectUnit={setSelectedUnit}\n          selectArmy={setSelectedArmy}\n          fromArmyList={fromArmyList}\n          unallocated={unallocated}\n          displaySelectOtherArmy={false}\n          tooManyDuplicates={tooManyDuplicates}\n        />\n      </main>\n    );\n  } else if (display === 'unitSelect' || display === 'deleteConfirm') {\n    return (\n      <main>\n        <PlaneContextProvider selectedPlane={halpiPlanesData.find((plane) => plane.name === selectedPlane)}>\n          <UnitSelect\n            armyName={selectedArmy}\n            unit={selectedUnit}\n            goToDisplay={handleGoToDisplay}\n            handleAddUnitToListWithArmyAndUnit={handleAddUnitToListWithArmyAndUnit}\n            editingUnit={!!selectedUnit.unitId}\n            editUnit={handleEditUnit}\n            deleteUnit={handleDeleteUnit}\n            deleteConfirm={display === 'deleteConfirm'}\n            availableArtefacts={enrichedAvailableArtefacts}\n          />\n        </PlaneContextProvider>\n      </main>\n    );\n  } else if (display === 'armyList') {\n    return (\n      <main>\n        <ArmyList\n          armyList={armyListState}\n          goToDisplay={handleGoToDisplay}\n          setFromArmyList={setFromArmyList}\n          selectUnit={setSelectedUnit}\n          unallocated={unallocated}\n          points={points}\n          tooManyDuplicates={tooManyDuplicates}\n          artefactDuplicates={artefactDuplicates}\n          overLimits={overLimits}\n        />\n      </main>\n    );\n  }\n};\n\nexport default Index;\n","import React, { Fragment } from 'react';\nimport Index from './Index';\n\nconst StandardIndex = () => {\n  return (\n    <Fragment>\n      <Index type=\"standard\" />\n    </Fragment>\n  );\n};\n\nexport default StandardIndex;\n","import React, { Fragment } from 'react';\nimport Index from './Index';\n\nconst HalpisRiftIndex = () => {\n  return (\n    <Fragment>\n      <Index type=\"halpi\" />\n    </Fragment>\n  );\n};\n\nexport default HalpisRiftIndex;\n","import React from 'react';\nimport StandardIndex from 'components/views/StandardIndex';\nimport HalpisRiftIndex from 'components/views/HalpisRiftIndex';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path=\"/kow-react-listbuilder/halpis-rift\" component={HalpisRiftIndex} />\n      <Route exact path=\"/kow-react-listbuilder\" component={StandardIndex} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}